{"ast":null,"code":"import _slicedToArray from \"/home/michael/Development/limbik/limbik_frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/michael/Development/limbik/limbik_frontend/src/components/navbar/index.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport AppBar from '@material-ui/core/AppBar';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Divider from '@material-ui/core/Divider';\nimport Drawer from '@material-ui/core/Drawer';\nimport Hidden from '@material-ui/core/Hidden';\nimport IconButton from '@material-ui/core/IconButton';\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MailIcon from '@material-ui/icons/Mail';\nimport MenuList from '@material-ui/core/MenuList';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Search from '../search/index.js';\nconst drawerWidth = 240;\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex'\n  },\n  drawer: {\n    [theme.breakpoints.up('sm')]: {\n      width: drawerWidth,\n      flexShrink: 0\n    }\n  },\n  appBar: {\n    marginLeft: drawerWidth,\n    [theme.breakpoints.up('sm')]: {\n      width: \"calc(100% - \".concat(drawerWidth, \"px)\")\n    }\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n    [theme.breakpoints.up('sm')]: {\n      display: 'none'\n    }\n  },\n  toolbar: theme.mixins.toolbar,\n  drawerPaper: {\n    width: drawerWidth\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3)\n  }\n}));\nexport default function ResponsiveDrawer(props) {\n  const children = props.children;\n  const container = props.container;\n  const classes = useStyles();\n  const theme = useTheme();\n\n  const _React$useState = React.useState(false),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        mobileOpen = _React$useState2[0],\n        setMobileOpen = _React$useState2[1];\n\n  const _React$useState3 = React.useState(0),\n        _React$useState4 = _slicedToArray(_React$useState3, 2),\n        selectedIndex = _React$useState4[0],\n        setSelectedIndex = _React$useState4[1];\n\n  const _React$useState5 = React.useState(null),\n        _React$useState6 = _slicedToArray(_React$useState5, 2),\n        anchorEl = _React$useState6[0],\n        setAnchorEl = _React$useState6[1];\n\n  function handleClickListItem(event) {\n    setAnchorEl(event.currentTarget);\n  }\n\n  const handleMenuItemClick = (event, index) => {\n    setSelectedIndex(index);\n    setAnchorEl(null);\n    props.aboutClickHandler(event.target.innerText);\n  };\n\n  function handleClose() {\n    setAnchorEl(null);\n  }\n\n  function handleDrawerToggle() {\n    setMobileOpen(!mobileOpen);\n  }\n\n  const drawer = React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, React.createElement(Hidden, {\n    smDown: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.toolbar,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  })), React.createElement(Divider, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }), React.createElement(MenuList, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, ['Projects', 'Resume', 'Blog', 'About'].map((text, index) => React.createElement(MenuItem, {\n    key: text,\n    selected: index === selectedIndex,\n    onClick: event => handleMenuItemClick(event, index),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, text)), React.createElement(Divider, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  })), React.createElement(Divider, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }));\n  return React.createElement(\"div\", {\n    className: classes.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }, React.createElement(CssBaseline, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }), React.createElement(AppBar, {\n    position: \"fixed\",\n    className: classes.appBar,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }, React.createElement(Toolbar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }, React.createElement(IconButton, {\n    color: \"inherit\",\n    \"aria-label\": \"Open drawer\",\n    edge: \"start\",\n    onClick: handleDrawerToggle,\n    className: classes.menuButton,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }, React.createElement(MenuIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  })), React.createElement(Typography, {\n    variant: \"h6\",\n    noWrap: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127\n    },\n    __self: this\n  }, \"Michael Carneal\"))), React.createElement(\"nav\", {\n    className: classes.drawer,\n    \"aria-label\": \"Mailbox folders\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132\n    },\n    __self: this\n  }, React.createElement(Hidden, {\n    smUp: true,\n    implementation: \"css\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134\n    },\n    __self: this\n  }, React.createElement(Drawer, {\n    container: container,\n    variant: \"temporary\",\n    anchor: theme.direction === 'rtl' ? 'right' : 'left',\n    open: mobileOpen,\n    onClose: handleDrawerToggle,\n    classes: {\n      paper: classes.drawerPaper\n    },\n    ModalProps: {\n      keepMounted: true // Better open performance on mobile.\n\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135\n    },\n    __self: this\n  }, drawer)), React.createElement(Hidden, {\n    xsDown: true,\n    implementation: \"css\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151\n    },\n    __self: this\n  }, React.createElement(Drawer, {\n    classes: {\n      paper: classes.drawerPaper\n    },\n    variant: \"permanent\",\n    open: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152\n    },\n    __self: this\n  }, drawer))), React.createElement(\"main\", {\n    className: classes.content,\n    id: \"main-cont\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.toolbar,\n    id: \"content-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165\n    },\n    __self: this\n  }), children));\n}\nResponsiveDrawer.propTypes = {\n  // Injected by the documentation to work in an iframe.\n  // You won't need it on your project.\n  container: PropTypes.object\n};","map":{"version":3,"sources":["/home/michael/Development/limbik/limbik_frontend/src/components/navbar/index.js"],"names":["React","PropTypes","AppBar","CssBaseline","Divider","Drawer","Hidden","IconButton","InboxIcon","List","ListItem","ListItemIcon","ListItemText","MailIcon","MenuList","MenuItem","MenuIcon","Toolbar","Typography","makeStyles","useTheme","Search","drawerWidth","useStyles","theme","root","display","drawer","breakpoints","up","width","flexShrink","appBar","marginLeft","menuButton","marginRight","spacing","toolbar","mixins","drawerPaper","content","flexGrow","padding","ResponsiveDrawer","props","children","container","classes","useState","mobileOpen","setMobileOpen","selectedIndex","setSelectedIndex","anchorEl","setAnchorEl","handleClickListItem","event","currentTarget","handleMenuItemClick","index","aboutClickHandler","target","innerText","handleClose","handleDrawerToggle","map","text","direction","paper","keepMounted","propTypes","object"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport AppBar from '@material-ui/core/AppBar';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Divider from '@material-ui/core/Divider';\nimport Drawer from '@material-ui/core/Drawer';\nimport Hidden from '@material-ui/core/Hidden';\nimport IconButton from '@material-ui/core/IconButton';\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MailIcon from '@material-ui/icons/Mail';\nimport MenuList from '@material-ui/core/MenuList';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Search from '../search/index.js'\n\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex'\n  },\n  drawer: {\n    [theme.breakpoints.up('sm')]: {\n      width: drawerWidth,\n        flexShrink: 0\n    },\n  },\n  appBar: {\n    marginLeft: drawerWidth,\n    [theme.breakpoints.up('sm')]: {\n      width: `calc(100% - ${drawerWidth}px)`,\n    },\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n    [theme.breakpoints.up('sm')]: {\n      display: 'none',\n    },\n  },\n  toolbar: theme.mixins.toolbar,\n  drawerPaper: {\n      width: drawerWidth,\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n  },\n}));\n\nexport default function ResponsiveDrawer(props) {\n  const { children }= props;\n  const { container } = props;\n  const classes = useStyles();\n  const theme = useTheme();\n  const [mobileOpen, setMobileOpen] = React.useState(false);\n  const [selectedIndex, setSelectedIndex] = React.useState(0);\n  const [anchorEl, setAnchorEl] = React.useState(null);\n    \n  function handleClickListItem(event) {\n    setAnchorEl(event.currentTarget);\n  }\n\n  const handleMenuItemClick = (event, index)=> {\n    setSelectedIndex(index);\n        setAnchorEl(null);\n        props.aboutClickHandler(event.target.innerText)\n    }\n\n\n  function handleClose() {\n    setAnchorEl(null);\n  }  \n\n  function handleDrawerToggle() {\n    setMobileOpen(!mobileOpen);\n  }\n\n  const drawer = (\n      <div>\n          <Hidden smDown>\n              <div className={classes.toolbar} />\n      </Hidden>\n      <Divider />\n      <MenuList >\n              {['Projects', 'Resume', 'Blog', 'About'].map((text, index) => (\n                  <MenuItem\n                     key={text}\n                    selected={index === selectedIndex}\n                onClick={event => handleMenuItemClick(event, index)}\n            >\n                    {text}\n    </MenuItem>\n              ))}\n    <Divider />\n\n</MenuList>\n<Divider />\n<br></br>\n\n    </div>\n  );\n\n    return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <AppBar position=\"fixed\"\n          className={classes.appBar}\n      >\n        <Toolbar>\n          <IconButton\n            color=\"inherit\"\n            aria-label=\"Open drawer\"\n            edge=\"start\"\n            onClick={handleDrawerToggle}\n            className={classes.menuButton}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography variant=\"h6\" noWrap>\n          Michael Carneal\n          </Typography>\n        </Toolbar>\n      </AppBar>\n      <nav className={classes.drawer} aria-label=\"Mailbox folders\">\n        {/* The implementation can be swapped with js to avoid SEO duplication of links. */}\n        <Hidden smUp implementation=\"css\">\n          <Drawer\n            container={container}\n            variant=\"temporary\"\n            anchor={theme.direction === 'rtl' ? 'right' : 'left'}\n            open={mobileOpen}\n            onClose={handleDrawerToggle}\n            classes={{\n              paper: classes.drawerPaper,\n            }}\n            ModalProps={{\n              keepMounted: true, // Better open performance on mobile.\n            }}\n          >\n            {drawer}\n          </Drawer>\n        </Hidden>\n        <Hidden xsDown implementation=\"css\">\n            <Drawer\n            \n            classes={{\n              paper: classes.drawerPaper,\n            }}\n            variant=\"permanent\"\n            open\n          >\n            {drawer}\n          </Drawer>\n        </Hidden>\n        </nav>\n        <main className={classes.content} id='main-cont'>\n            <div className={classes.toolbar} id='content-container' />\n                {children}\n        </main>\n    </div>\n  );\n}\n\nResponsiveDrawer.propTypes = {\n  // Injected by the documentation to work in an iframe.\n  // You won't need it on your project.\n  container: PropTypes.object,\n};\n\n"]},"metadata":{},"sourceType":"module"}