{"ast":null,"code":"import _objectSpread from \"/Users/michaelcarneal/Development/limbik/limbik_frontend/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _objectWithoutProperties from \"/Users/michaelcarneal/Development/limbik/limbik_frontend/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/Users/michaelcarneal/Development/limbik/limbik_frontend/src/components/table/index.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { withStyles } from '@material-ui/core/styles';\nimport TableCell from '@material-ui/core/TableCell';\nimport Paper from '@material-ui/core/Paper';\nimport { AutoSizer, Column, Table } from 'react-virtualized';\n\nconst styles = theme => ({\n  flexContainer: {\n    display: 'flex',\n    alignItems: 'center',\n    boxSizing: 'border-box'\n  },\n  tableRow: {\n    cursor: 'pointer'\n  },\n  tableRowHover: {\n    '&:hover': {\n      backgroundColor: theme.palette.grey[200]\n    }\n  },\n  tableCell: {\n    flex: 1\n  },\n  noClick: {\n    cursor: 'initial'\n  }\n});\n\nclass MuiVirtualizedTable extends React.PureComponent {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      clicked: false\n    };\n\n    this.clickHandler = () => {\n      this.props.clickSortHandler();\n      this.setState({\n        clicked: !this.state.clicked\n      });\n    };\n\n    this.getRowClassName = ({\n      index\n    }) => {\n      const _this$props = this.props,\n            classes = _this$props.classes,\n            onRowClick = _this$props.onRowClick;\n      return clsx(classes.tableRow, classes.flexContainer, {\n        [classes.tableRowHover]: index !== -1 && onRowClick != null\n      });\n    };\n\n    this.cellRenderer = ({\n      cellData,\n      columnIndex\n    }) => {\n      const _this$props2 = this.props,\n            columns = _this$props2.columns,\n            classes = _this$props2.classes,\n            rowHeight = _this$props2.rowHeight,\n            onRowClick = _this$props2.onRowClick;\n      return React.createElement(TableCell, {\n        component: \"div\",\n        className: clsx(classes.tableCell, classes.flexContainer, {\n          [classes.noClick]: onRowClick == null\n        }),\n        variant: \"body\",\n        style: {\n          height: rowHeight\n        },\n        align: columnIndex != null && columns[columnIndex].numeric || false ? 'right' : 'left',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, cellData);\n    };\n\n    this.headerRenderer = ({\n      label,\n      columnIndex\n    }) => {\n      const _this$props3 = this.props,\n            headerHeight = _this$props3.headerHeight,\n            columns = _this$props3.columns,\n            classes = _this$props3.classes;\n      return React.createElement(TableCell, {\n        onClick: this.clickHandler,\n        component: \"div\",\n        className: clsx(classes.tableCell, classes.flexContainer, classes.noClick),\n        variant: \"head\",\n        style: {\n          height: headerHeight\n        },\n        align: columns[columnIndex].numeric || false ? 'right' : 'left',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, label));\n    };\n  }\n\n  render() {\n    console.log('inside wierd table', this.props);\n\n    const _this$props4 = this.props,\n          classes = _this$props4.classes,\n          columns = _this$props4.columns,\n          rowHeight = _this$props4.rowHeight,\n          headerHeight = _this$props4.headerHeight,\n          tableProps = _objectWithoutProperties(_this$props4, [\"classes\", \"columns\", \"rowHeight\", \"headerHeight\"]);\n\n    return React.createElement(AutoSizer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, ({\n      height,\n      width\n    }) => React.createElement(Table, Object.assign({\n      height: height,\n      width: width,\n      rowHeight: rowHeight,\n      headerHeight: headerHeight\n    }, tableProps, {\n      rowClassName: this.getRowClassName,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }), columns.map((_ref, index) => {\n      let dataKey = _ref.dataKey,\n          other = _objectWithoutProperties(_ref, [\"dataKey\"]);\n\n      return React.createElement(Column, Object.assign({\n        key: dataKey,\n        headerRenderer: headerProps => this.headerRenderer(_objectSpread({}, headerProps, {\n          columnIndex: index\n        })),\n        className: classes.flexContainer,\n        cellRenderer: this.cellRenderer,\n        dataKey: dataKey\n      }, other, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }));\n    })));\n  }\n\n}\n\nMuiVirtualizedTable.defaultProps = {\n  headerHeight: 48,\n  rowHeight: 48\n};\nMuiVirtualizedTable.propTypes = {\n  classes: PropTypes.object.isRequired,\n  columns: PropTypes.arrayOf(PropTypes.shape({\n    dataKey: PropTypes.string.isRequired,\n    label: PropTypes.string.isRequired,\n    numeric: PropTypes.bool,\n    width: PropTypes.number.isRequired\n  })).isRequired,\n  headerHeight: PropTypes.number,\n  onRowClick: PropTypes.func,\n  rowHeight: PropTypes.number\n};\nconst VirtualizedTable = withStyles(styles)(MuiVirtualizedTable);\n\nconst createData = (id, postid, clicks, impressions, currency, text, button) => {\n  return {\n    id,\n    postid,\n    clicks,\n    impressions,\n    currency,\n    text,\n    button\n  };\n};\n\nconst textShortener = text => {\n  if (text && text.length > 20) {\n    return text.slice(0, 20).concat('...');\n  } else if (text && text.length < 20) {\n    return text;\n  } else {\n    return 'no text provided';\n  }\n};\n\nconst rows = [];\n\nclass ReactVirtualizedTable extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      clicked: false\n    };\n\n    this.clickHandler = () => {\n      this.props.clickSortHandler();\n      this.setState({\n        clicked: !this.state.clicked\n      });\n    };\n  }\n\n  componentDidUpdate(prevProps) {\n    console.log('updating comp', prevProps, this.props);\n  }\n\n  render() {\n    console.log('reacttable', this.state);\n\n    for (let i = 0; i < this.props.data.length; i += 1) {\n      rows.push(createData(this.props.data[i].id, this.props.data[i].id, this.props.data[i].clicks, this.props.data[i].impressions, \"\".concat(this.props.data[i].spend.amount, \" \").concat(this.props.data[i].spend.currency), textShortener(this.props.data[i].text), React.createElement(\"button\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193\n        },\n        __self: this\n      }, \"View More\")));\n    }\n\n    return React.createElement(Paper, {\n      style: {\n        height: 600,\n        width: '100%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196\n      },\n      __self: this\n    }, React.createElement(VirtualizedTable, {\n      clickSortHandler: this.clickHandler,\n      data: this.props.data,\n      rowCount: rows.length,\n      rowGetter: ({\n        index\n      }) => rows[index],\n      columns: [{\n        width: 120,\n        label: 'Post ID:',\n        dataKey: 'postid'\n      }, {\n        width: 120,\n        label: 'Clicks',\n        dataKey: 'clicks',\n        numeric: true\n      }, {\n        width: 120,\n        label: 'Impressions',\n        dataKey: 'impressions',\n        numeric: true\n      }, {\n        width: 120,\n        label: 'Currency',\n        dataKey: 'currency'\n      }, {\n        width: 240,\n        label: 'Text',\n        dataKey: 'text',\n        numeric: true\n      }, {\n        width: 120,\n        dataKey: 'button'\n      }],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default ReactVirtualizedTable;","map":{"version":3,"sources":["/Users/michaelcarneal/Development/limbik/limbik_frontend/src/components/table/index.js"],"names":["React","Component","PropTypes","clsx","withStyles","TableCell","Paper","AutoSizer","Column","Table","styles","theme","flexContainer","display","alignItems","boxSizing","tableRow","cursor","tableRowHover","backgroundColor","palette","grey","tableCell","flex","noClick","MuiVirtualizedTable","PureComponent","state","clicked","clickHandler","props","clickSortHandler","setState","getRowClassName","index","classes","onRowClick","cellRenderer","cellData","columnIndex","columns","rowHeight","height","numeric","headerRenderer","label","headerHeight","render","console","log","tableProps","width","map","dataKey","other","headerProps","defaultProps","propTypes","object","isRequired","arrayOf","shape","string","bool","number","func","VirtualizedTable","createData","id","postid","clicks","impressions","currency","text","button","textShortener","length","slice","concat","rows","ReactVirtualizedTable","componentDidUpdate","prevProps","i","data","push","spend","amount"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { withStyles } from '@material-ui/core/styles';\nimport TableCell from '@material-ui/core/TableCell';\nimport Paper from '@material-ui/core/Paper';\nimport { AutoSizer, Column, Table } from 'react-virtualized';\n\nconst styles = theme => ({\n  flexContainer: {\n    display: 'flex',\n    alignItems: 'center',\n    boxSizing: 'border-box',\n  },\n  tableRow: {\n    cursor: 'pointer',\n  },\n  tableRowHover: {\n    '&:hover': {\n      backgroundColor: theme.palette.grey[200],\n    },\n  },\n  tableCell: {\n    flex: 1,\n  },\n  noClick: {\n    cursor: 'initial',\n  },\n});\n\nclass MuiVirtualizedTable extends React.PureComponent {\n\n    state = {\n        clicked : false\n    }\n\n\n  static defaultProps = {\n    headerHeight: 48,\n    rowHeight: 48,\n  };\n\n    clickHandler = () => {\n       this.props.clickSortHandler()\n        this.setState({\n            clicked : !this.state.clicked\n        })\n    }\n\n\n  getRowClassName = ({ index }) => {\n    const { classes, onRowClick } = this.props;\n\n    return clsx(classes.tableRow, classes.flexContainer, {\n      [classes.tableRowHover]: index !== -1 && onRowClick != null,\n    });\n  };\n\n  cellRenderer = ({ cellData, columnIndex }) => {\n    const { columns, classes, rowHeight, onRowClick } = this.props;\n    return (\n      <TableCell\n        component=\"div\"\n        className={clsx(classes.tableCell, classes.flexContainer, {\n          [classes.noClick]: onRowClick == null,\n        })}\n        variant=\"body\"\n        style={{ height: rowHeight }}\n        align={(columnIndex != null && columns[columnIndex].numeric) || false ? 'right' : 'left'}\n      >\n        {cellData}\n      </TableCell>\n    );\n  };\n\n  headerRenderer = ({ label, columnIndex }) => {\n    const { headerHeight, columns, classes } = this.props;\n\n    return (\n        <TableCell\n        onClick={this.clickHandler}\n        component=\"div\"\n        className={clsx(classes.tableCell, classes.flexContainer, classes.noClick)}\n        variant=\"head\"\n        style={{ height: headerHeight }}\n        align={columns[columnIndex].numeric || false ? 'right' : 'left'}\n      >\n        <button>{label}</button>\n      </TableCell>\n    );\n  };\n\n    render() {\n        console.log('inside wierd table', this.props)\n    const { classes, columns, rowHeight, headerHeight, ...tableProps } = this.props;\n    return (\n      <AutoSizer>\n        {({ height, width }) => (\n          <Table\n            height={height}\n            width={width}\n            rowHeight={rowHeight}\n            headerHeight={headerHeight}\n            {...tableProps}\n            rowClassName={this.getRowClassName}\n          >\n            {columns.map(({ dataKey, ...other }, index) => {\n              return (\n                  <Column\n                  key={dataKey}\n                  headerRenderer={headerProps =>\n                    this.headerRenderer({\n                      ...headerProps,\n                      columnIndex: index,\n                    })\n                  }\n                  className={classes.flexContainer}\n                  cellRenderer={this.cellRenderer}\n                  dataKey={dataKey}\n                  {...other}\n                />\n              );\n            })}\n          </Table>\n        )}\n      </AutoSizer>\n    );\n  }\n}\n\nMuiVirtualizedTable.propTypes = {\n  classes: PropTypes.object.isRequired,\n  columns: PropTypes.arrayOf(\n    PropTypes.shape({\n      dataKey: PropTypes.string.isRequired,\n      label: PropTypes.string.isRequired,\n      numeric: PropTypes.bool,\n      width: PropTypes.number.isRequired,\n    }),\n  ).isRequired,\n  headerHeight: PropTypes.number,\n  onRowClick: PropTypes.func,\n  rowHeight: PropTypes.number,\n};\n\nconst VirtualizedTable = withStyles(styles)(MuiVirtualizedTable);\n\n\n\nconst createData = (id, postid, clicks, impressions, currency, text, button) => {\n  return { id, postid, clicks, impressions, currency, text, button };\n}\n\nconst textShortener = (text) => {\n    if (text && text.length > 20){\n        return text.slice(0,20).concat('...')\n    }\n    else if (text && text.length < 20){\n        return text\n    }\n    else {\n        return 'no text provided'\n    }\n}\n\nconst rows = [];\n\n\nclass ReactVirtualizedTable extends Component {\n\n\n    state = {\n        clicked : false \n    }\n\n\n    clickHandler = () => {\n       this.props.clickSortHandler()\n        this.setState({\n            clicked : !this.state.clicked\n        })\n    }\n\n    componentDidUpdate(prevProps){\n            console.log('updating comp', prevProps, this.props)\n    }\n\n    render(){\n\n        console.log('reacttable', this.state)\n\n    for (let i = 0; i < this.props.data.length ; i += 1) {\n        rows.push(createData(this.props.data[i].id, this.props.data[i].id, this.props.data[i].clicks, this.props.data[i].impressions, `${this.props.data[i].spend.amount} ${this.props.data[i].spend.currency}`, textShortener(this.props.data[i].text) , <button>View More</button>));\n    }\n  return (\n    <Paper style={{ height: 600, width: '100%' }}>\n        <VirtualizedTable\n        clickSortHandler={this.clickHandler}\n        data={this.props.data}\n        rowCount={rows.length}\n        rowGetter={({ index }) => rows[index]}\n        columns={[\n            {\n            width: 120,\n            label: 'Post ID:',\n            dataKey: 'postid',\n          },\n          {\n            width: 120,\n            label: 'Clicks',\n            dataKey: 'clicks',\n            numeric: true,\n          },\n          {\n            width: 120,\n            label: 'Impressions',\n            dataKey: 'impressions',\n            numeric: true,\n          },\n          {\n            width: 120,\n            label: 'Currency',\n            dataKey: 'currency',\n          },\n          {\n            width: 240,\n            label: 'Text',\n            dataKey: 'text',\n            numeric: true,\n          },\n          {\n            width: 120,\n            dataKey: 'button',\n          },\n        ]}\n      />\n    </Paper>\n  );\n}\n}\nexport default ReactVirtualizedTable   \n"]},"metadata":{},"sourceType":"module"}