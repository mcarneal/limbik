{"ast":null,"code":"import _objectSpread from \"/Users/michaelcarneal/Development/limbik/limbik_frontend/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _objectWithoutProperties from \"/Users/michaelcarneal/Development/limbik/limbik_frontend/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/Users/michaelcarneal/Development/limbik/limbik_frontend/src/components/table/index.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { withStyles } from '@material-ui/core/styles';\nimport TableCell from '@material-ui/core/TableCell';\nimport Paper from '@material-ui/core/Paper';\nimport { AutoSizer, Column, Table } from 'react-virtualized';\n\nconst styles = theme => ({\n  flexContainer: {\n    display: 'flex',\n    alignItems: 'center',\n    boxSizing: 'border-box'\n  },\n  tableRow: {\n    cursor: 'pointer'\n  },\n  tableRowHover: {\n    '&:hover': {\n      backgroundColor: theme.palette.grey[200]\n    }\n  },\n  tableCell: {\n    flex: 1\n  },\n  noClick: {\n    cursor: 'initial'\n  }\n});\n\nclass MuiVirtualizedTable extends React.PureComponent {\n  constructor(...args) {\n    super(...args);\n\n    this.getRowClassName = ({\n      index\n    }) => {\n      const _this$props = this.props,\n            classes = _this$props.classes,\n            onRowClick = _this$props.onRowClick;\n      return clsx(classes.tableRow, classes.flexContainer, {\n        [classes.tableRowHover]: index !== -1 && onRowClick != null\n      });\n    };\n\n    this.cellRenderer = ({\n      cellData,\n      columnIndex\n    }) => {\n      const _this$props2 = this.props,\n            columns = _this$props2.columns,\n            classes = _this$props2.classes,\n            rowHeight = _this$props2.rowHeight,\n            onRowClick = _this$props2.onRowClick;\n      return React.createElement(TableCell, {\n        component: \"div\",\n        className: clsx(classes.tableCell, classes.flexContainer, {\n          [classes.noClick]: onRowClick == null\n        }),\n        variant: \"body\",\n        style: {\n          height: rowHeight\n        },\n        align: columnIndex != null && columns[columnIndex].numeric || false ? 'right' : 'left',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, cellData);\n    };\n\n    this.headerRenderer = ({\n      label,\n      columnIndex\n    }) => {\n      const _this$props3 = this.props,\n            headerHeight = _this$props3.headerHeight,\n            columns = _this$props3.columns,\n            classes = _this$props3.classes;\n      return React.createElement(TableCell, {\n        component: \"div\",\n        className: clsx(classes.tableCell, classes.flexContainer, classes.noClick),\n        variant: \"head\",\n        style: {\n          height: headerHeight\n        },\n        align: columns[columnIndex].numeric || false ? 'right' : 'left',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, label));\n    };\n  }\n\n  render() {\n    const _this$props4 = this.props,\n          classes = _this$props4.classes,\n          columns = _this$props4.columns,\n          rowHeight = _this$props4.rowHeight,\n          headerHeight = _this$props4.headerHeight,\n          tableProps = _objectWithoutProperties(_this$props4, [\"classes\", \"columns\", \"rowHeight\", \"headerHeight\"]);\n\n    return React.createElement(AutoSizer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, ({\n      height,\n      width\n    }) => React.createElement(Table, Object.assign({\n      height: height,\n      width: width,\n      rowHeight: rowHeight,\n      headerHeight: headerHeight\n    }, tableProps, {\n      rowClassName: this.getRowClassName,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }), columns.map((_ref, index) => {\n      let dataKey = _ref.dataKey,\n          other = _objectWithoutProperties(_ref, [\"dataKey\"]);\n\n      return React.createElement(Column, Object.assign({\n        key: dataKey,\n        headerRenderer: headerProps => this.headerRenderer(_objectSpread({}, headerProps, {\n          columnIndex: index\n        })),\n        className: classes.flexContainer,\n        cellRenderer: this.cellRenderer,\n        dataKey: dataKey\n      }, other, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }));\n    })));\n  }\n\n}\n\nMuiVirtualizedTable.defaultProps = {\n  headerHeight: 48,\n  rowHeight: 48\n};\nMuiVirtualizedTable.propTypes = {\n  classes: PropTypes.object.isRequired,\n  columns: PropTypes.arrayOf(PropTypes.shape({\n    dataKey: PropTypes.string.isRequired,\n    label: PropTypes.string.isRequired,\n    numeric: PropTypes.bool,\n    width: PropTypes.number.isRequired\n  })).isRequired,\n  headerHeight: PropTypes.number,\n  onRowClick: PropTypes.func,\n  rowHeight: PropTypes.number\n};\nconst VirtualizedTable = withStyles(styles)(MuiVirtualizedTable); // ---\n\nconst sample = [['Frozen yoghurt', 159, 6.0, 24, 4.0], ['Ice cream sandwich', 237, 9.0, 37, 4.3], ['Eclair', 262, 16.0, 24, 6.0], ['Cupcake', 305, 3.7, 67, 4.3], ['Gingerbread', 356, 16.0, 49, 3.9]];\n\nfunction createData(id, dessert, calories, fat, carbs, protein) {\n  return {\n    id,\n    dessert,\n    calories,\n    fat,\n    carbs,\n    protein\n  };\n}\n\nconst rows = [];\nexport default function ReactVirtualizedTable(props) {\n  for (let i = 0; i < props.data.length; i += 1) {\n    rows.push(createData(props.data[i].id, props.data[i].id));\n  }\n\n  return React.createElement(Paper, {\n    style: {\n      height: 400,\n      width: '100%'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155\n    },\n    __self: this\n  }, React.createElement(VirtualizedTable, {\n    rowCount: rows.length,\n    rowGetter: ({\n      index\n    }) => rows[index],\n    columns: [{\n      width: 200,\n      label: 'Dessert',\n      dataKey: 'dessert'\n    }, {\n      width: 120,\n      label: 'Calories\\u00A0(g)',\n      dataKey: 'calories',\n      numeric: true\n    }, {\n      width: 120,\n      label: 'Fat\\u00A0(g)',\n      dataKey: 'fat',\n      numeric: true\n    }, {\n      width: 120,\n      label: 'Carbs\\u00A0(g)',\n      dataKey: 'carbs',\n      numeric: true\n    }, {\n      width: 120,\n      label: 'Protein\\u00A0(g)',\n      dataKey: 'protein',\n      numeric: true\n    }, {\n      width: 120,\n      label: 'Protein\\u00A0(GG)',\n      dataKey: 'protein',\n      numeric: true\n    }],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156\n    },\n    __self: this\n  }));\n}","map":{"version":3,"sources":["/Users/michaelcarneal/Development/limbik/limbik_frontend/src/components/table/index.js"],"names":["React","PropTypes","clsx","withStyles","TableCell","Paper","AutoSizer","Column","Table","styles","theme","flexContainer","display","alignItems","boxSizing","tableRow","cursor","tableRowHover","backgroundColor","palette","grey","tableCell","flex","noClick","MuiVirtualizedTable","PureComponent","getRowClassName","index","props","classes","onRowClick","cellRenderer","cellData","columnIndex","columns","rowHeight","height","numeric","headerRenderer","label","headerHeight","render","tableProps","width","map","dataKey","other","headerProps","defaultProps","propTypes","object","isRequired","arrayOf","shape","string","bool","number","func","VirtualizedTable","sample","createData","id","dessert","calories","fat","carbs","protein","rows","ReactVirtualizedTable","i","data","length","push"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { withStyles } from '@material-ui/core/styles';\nimport TableCell from '@material-ui/core/TableCell';\nimport Paper from '@material-ui/core/Paper';\nimport { AutoSizer, Column, Table } from 'react-virtualized';\n\nconst styles = theme => ({\n  flexContainer: {\n    display: 'flex',\n    alignItems: 'center',\n    boxSizing: 'border-box',\n  },\n  tableRow: {\n    cursor: 'pointer',\n  },\n  tableRowHover: {\n    '&:hover': {\n      backgroundColor: theme.palette.grey[200],\n    },\n  },\n  tableCell: {\n    flex: 1,\n  },\n  noClick: {\n    cursor: 'initial',\n  },\n});\n\nclass MuiVirtualizedTable extends React.PureComponent {\n  static defaultProps = {\n    headerHeight: 48,\n    rowHeight: 48,\n  };\n\n  getRowClassName = ({ index }) => {\n    const { classes, onRowClick } = this.props;\n\n    return clsx(classes.tableRow, classes.flexContainer, {\n      [classes.tableRowHover]: index !== -1 && onRowClick != null,\n    });\n  };\n\n  cellRenderer = ({ cellData, columnIndex }) => {\n    const { columns, classes, rowHeight, onRowClick } = this.props;\n    return (\n      <TableCell\n        component=\"div\"\n        className={clsx(classes.tableCell, classes.flexContainer, {\n          [classes.noClick]: onRowClick == null,\n        })}\n        variant=\"body\"\n        style={{ height: rowHeight }}\n        align={(columnIndex != null && columns[columnIndex].numeric) || false ? 'right' : 'left'}\n      >\n        {cellData}\n      </TableCell>\n    );\n  };\n\n  headerRenderer = ({ label, columnIndex }) => {\n    const { headerHeight, columns, classes } = this.props;\n\n    return (\n      <TableCell\n        component=\"div\"\n        className={clsx(classes.tableCell, classes.flexContainer, classes.noClick)}\n        variant=\"head\"\n        style={{ height: headerHeight }}\n        align={columns[columnIndex].numeric || false ? 'right' : 'left'}\n      >\n        <span>{label}</span>\n      </TableCell>\n    );\n  };\n\n  render() {\n    const { classes, columns, rowHeight, headerHeight, ...tableProps } = this.props;\n    return (\n      <AutoSizer>\n        {({ height, width }) => (\n          <Table\n            height={height}\n            width={width}\n            rowHeight={rowHeight}\n            headerHeight={headerHeight}\n            {...tableProps}\n            rowClassName={this.getRowClassName}\n          >\n            {columns.map(({ dataKey, ...other }, index) => {\n              return (\n                <Column\n                  key={dataKey}\n                  headerRenderer={headerProps =>\n                    this.headerRenderer({\n                      ...headerProps,\n                      columnIndex: index,\n                    })\n                  }\n                  className={classes.flexContainer}\n                  cellRenderer={this.cellRenderer}\n                  dataKey={dataKey}\n                  {...other}\n                />\n              );\n            })}\n          </Table>\n        )}\n      </AutoSizer>\n    );\n  }\n}\n\nMuiVirtualizedTable.propTypes = {\n  classes: PropTypes.object.isRequired,\n  columns: PropTypes.arrayOf(\n    PropTypes.shape({\n      dataKey: PropTypes.string.isRequired,\n      label: PropTypes.string.isRequired,\n      numeric: PropTypes.bool,\n      width: PropTypes.number.isRequired,\n    }),\n  ).isRequired,\n  headerHeight: PropTypes.number,\n  onRowClick: PropTypes.func,\n  rowHeight: PropTypes.number,\n};\n\nconst VirtualizedTable = withStyles(styles)(MuiVirtualizedTable);\n\n// ---\n\nconst sample = [\n  ['Frozen yoghurt', 159, 6.0, 24, 4.0],\n  ['Ice cream sandwich', 237, 9.0, 37, 4.3],\n  ['Eclair', 262, 16.0, 24, 6.0],\n  ['Cupcake', 305, 3.7, 67, 4.3],\n  ['Gingerbread', 356, 16.0, 49, 3.9],\n];\n\nfunction createData(id, dessert, calories, fat, carbs, protein) {\n  return { id, dessert, calories, fat, carbs, protein };\n}\n\nconst rows = [];\n\n\nexport default function ReactVirtualizedTable(props) {\n\n    for (let i = 0; i < props.data.length ; i += 1) {\n        rows.push(createData(props.data[i].id, props.data[i].id));\n    }\n  return (\n    <Paper style={{ height: 400, width: '100%' }}>\n      <VirtualizedTable\n        rowCount={rows.length}\n        rowGetter={({ index }) => rows[index]}\n        columns={[\n          {\n            width: 200,\n            label: 'Dessert',\n            dataKey: 'dessert',\n          },\n          {\n            width: 120,\n            label: 'Calories\\u00A0(g)',\n            dataKey: 'calories',\n            numeric: true,\n          },\n          {\n            width: 120,\n            label: 'Fat\\u00A0(g)',\n            dataKey: 'fat',\n            numeric: true,\n          },\n          {\n            width: 120,\n            label: 'Carbs\\u00A0(g)',\n            dataKey: 'carbs',\n            numeric: true,\n          },\n          {\n            width: 120,\n            label: 'Protein\\u00A0(g)',\n            dataKey: 'protein',\n            numeric: true,\n          },\n          {\n            width: 120,\n            label: 'Protein\\u00A0(GG)',\n            dataKey: 'protein',\n            numeric: true,\n          },\n        ]}\n      />\n    </Paper>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}