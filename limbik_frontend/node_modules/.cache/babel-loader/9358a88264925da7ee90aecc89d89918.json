{"ast":null,"code":"var _jsxFileName = \"/home/michael/Development/limbik/limbik_frontend/src/components/table/index.js\";\nimport React, { Component } from 'react';\nlet rows = [];\n\nclass PostTable extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      initialOrder: [],\n      direction: '',\n      data: []\n    };\n\n    this.sortHandler = e => {\n      let data = this.props.data;\n      let category = e.target.name;\n\n      switch (e.target.id) {\n        case 'Assc':\n          let initialOrder = this.props.data;\n          rows = data.sort((a, b) => {\n            return a.category - b.category;\n          });\n          e.target.id = 'Desc';\n          this.setState({\n            direction: 'Assc'\n          });\n          break;\n\n        case 'Desc':\n          rows = data.sort((a, b) => {\n            return b.clicks - a.clicks;\n          });\n          e.target.id = 'Assc';\n          this.setState({\n            direction: 'Desc'\n          });\n          break;\n\n        default:\n          return null;\n      }\n    };\n\n    this.postStringShortener = string => {\n      if (string && string.length > 50) {\n        return string.slice(0, 50).concat('...');\n      } else if (string && string.length < 50) {\n        return string;\n      } else return 'no description';\n    };\n\n    this.getTableRows = () => {\n      return rows.map(post => React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, post.id), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, this.postStringShortener(post.text)), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, post.clicks), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, post.impressions), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, \"\".concat(post.spend.amount ? post.spend.amount : 0, \" \").concat(post.spend.currency ? post.spend.currency : ''))));\n    };\n\n    this.collectRows = () => {\n      if (rows.length <= 0) {\n        this.props.data.map(post => rows.push(post));\n      }\n    };\n  }\n\n  render() {\n    this.collectRows();\n    return React.createElement(\"div\", {\n      className: \"table\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(\"table\", {\n      style: {\n        width: '95vw'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, \"Post ID\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, \"Text\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      name: \"clicks\",\n      id: \"Assc\",\n      onClick: this.sortHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, \"Clicks\")), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      name: \"impressions\",\n      id: \"Assc\",\n      onClick: this.sortHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, \"Impressions\")), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, \"Currency\")), this.getTableRows()));\n  }\n\n}\n\nexport default PostTable;","map":{"version":3,"sources":["/home/michael/Development/limbik/limbik_frontend/src/components/table/index.js"],"names":["React","Component","rows","PostTable","state","initialOrder","direction","data","sortHandler","e","props","category","target","name","id","sort","a","b","setState","clicks","postStringShortener","string","length","slice","concat","getTableRows","map","post","text","impressions","spend","amount","currency","collectRows","push","render","width"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\n\n\nlet rows = []\n\nclass PostTable extends Component {\n\n\n    state = {\n        initialOrder : [],\n        direction : '',\n        data : []\n    }\n\n\n    sortHandler = (e) => {\n\n        let data = this.props.data\n        let category = e.target.name \n\n        switch(e.target.id){\n            case 'Assc':\n                let initialOrder = this.props.data\n                rows = data.sort((a,b)=>{\n                    return a.category-b.category\n                })\n                e.target.id = 'Desc'\n                this.setState({ \n                    direction : 'Assc',\n                })\n                break;\n            case 'Desc': \n                rows = data.sort((a,b)=>{\n                    return b.clicks-a.clicks\n                })\n                e.target.id = 'Assc'\n                this.setState({ direction : 'Desc' })\n                break;\n            default:\n                return null\n        }\n    }\n\n\n    postStringShortener = (string) => {\n        if(string && string.length > 50){\n            return string.slice(0,50).concat('...')\n        }\n        else if(string && string.length < 50){\n            return string\n        }\n        else \n            return 'no description'\n    }\n\n    getTableRows = () => {\n            return rows.map(post => <tr>\n                <td>{post.id}</td>\n                <td>{this.postStringShortener(post.text)}</td>\n                <td>{post.clicks}</td>\n                <td>{post.impressions}</td>\n                <td>{`${post.spend.amount ? post.spend.amount : 0} ${post.spend.currency ? post.spend.currency : ''}`}</td>\n                </tr>)\n\n        }\n\n    collectRows = () => {\n        if(rows.length <= 0){\n            this.props.data.map(post => rows.push(post))\n        }\n    }\n\n    render() {\n        this.collectRows()\n        return(\n            <div className='table'>\n            <table style={{width : '95vw'}}>\n                <tr>\n                <th>Post ID</th>\n                <th>Text</th>\n                <th><button\n                    name='clicks'\n                    id='Assc'\n                    onClick={this.sortHandler}>Clicks</button></th>\n            <th>\n                <button\n                    name='impressions'\n                    id='Assc'\n                    onClick={this.sortHandler}>\n                        Impressions\n                </button>\n            </th>\n                <th>Currency</th>\n            </tr>\n            {this.getTableRows()}\n        </table>\n</div>\n    )\n  }\n}\n\nexport default PostTable\n"]},"metadata":{},"sourceType":"module"}