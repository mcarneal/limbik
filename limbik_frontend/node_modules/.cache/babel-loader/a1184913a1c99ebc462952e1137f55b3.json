{"ast":null,"code":"var _jsxFileName = \"/home/michael/Development/limbik/limbik_frontend/src/components/table/index.js\";\nimport React, { Component } from 'react';\nimport Modal from '../modal/index.js';\nlet rows = [];\n\nclass PostTable extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      loaded: false,\n      initialOrder: [],\n      direction: '',\n      data: [],\n      singlePost: null,\n      open: false\n    };\n\n    this.sortImpressionsHandler = e => {\n      console.log('yeah');\n      let data = this.props.data;\n\n      if (e.target.id === 'Assc') {\n        rows = data.sort((a, b) => {\n          return a.impressions - b.impressions;\n        });\n        e.target.id = 'Desc';\n        this.setState({\n          direction: 'Assc'\n        });\n      } else if (e.target.id === 'Desc') {\n        rows = data.sort((a, b) => {\n          return b.impressions - a.impressions;\n        });\n        e.target.id = 'Assc';\n        this.setState({\n          direction: 'Desc'\n        });\n      } else {\n        return null;\n      }\n    };\n\n    this.sortClickHandler = e => {\n      let data = this.props.data;\n\n      if (e.target.id === 'Assc') {\n        rows = data.sort((a, b) => {\n          return a.clicks - b.clicks;\n        });\n        e.target.id = 'Desc';\n        this.setState({\n          direction: 'Assc'\n        });\n      } else if (e.target.id === 'Desc') {\n        rows = data.sort((a, b) => {\n          return b.clicks - a.clicks;\n        });\n        e.target.id = 'Assc';\n        this.setState({\n          direction: 'Desc'\n        });\n      } else {\n        return null;\n      }\n    };\n\n    this.postStringShortener = string => {\n      if (string && string.length > 50) {\n        return string.slice(0, 47).concat('...');\n      } else if (string && string.length < 50) {\n        return string;\n      } else return 'no description';\n    };\n\n    this.moreInfoClickHandeler = e => {\n      this.handleClickOpen();\n      let postId = e.target.parentNode.parentNode.id;\n      let post = this.props.data.filter(post => post.id === parseInt(postId));\n      this.setState({\n        singlePost: post\n      });\n    };\n\n    this.handleClickOpen = () => {\n      this.setState({\n        open: true\n      });\n    };\n\n    this.handleClose = () => {\n      this.setState({\n        open: false\n      });\n    };\n\n    this.getTableRows = () => {\n      return rows.map(post => React.createElement(\"tbody\", {\n        id: \"\".concat(post.id),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"ui green button\",\n        onClick: e => this.props.compareDataHandeler(e.target.parentNode.parentNode.id),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, \"Add to compare\")), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        onClick: this.moreInfoClickHandeler,\n        className: \"ui blue button\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, \"More Info\")), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, post.id), React.createElement(\"td\", {\n        style: {\n          textAlign: 'left'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        href: post.url,\n        target: \"_blank\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, post.url)), React.createElement(\"td\", {\n        style: {\n          textAlign: 'left'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, this.postStringShortener(post.text)), React.createElement(\"td\", {\n        style: {\n          textAlign: 'left'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, post.clicks), React.createElement(\"td\", {\n        style: {\n          textAlign: 'left'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, post.impressions), React.createElement(\"td\", {\n        style: {\n          textAlign: 'left'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, \"\".concat(post.spend.amount ? post.spend.amount : 0, \" \").concat(post.spend.currency ? post.spend.currency : '')))).then(console.log);\n    };\n\n    this.collectRows = () => {\n      if (rows.length <= 0) {\n        this.props.data.map(post => rows.push(post));\n      } else if (rows.length !== this.props.data.length) {\n        rows = [];\n        this.props.data.map(post => rows.push(post));\n      }\n    };\n  }\n\n  render() {\n    console.log(this.state.loaded);\n    this.collectRows();\n    return React.createElement(\"div\", {\n      className: \"table\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, React.createElement(\"table\", {\n      style: {\n        width: '80vw'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, \"Check\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, \"Details\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, \"Post ID\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, \"URL\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, \"Text\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"ui grey button\",\n      name: \"clicks\",\n      id: \"Assc\",\n      onClick: this.sortClickHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, \"Clicks\")), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"ui grey button\",\n      name: \"impressions\",\n      id: \"Assc\",\n      onClick: this.sortImpressionsHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, \"Impressions\")), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }, \"Currency\")), this.getTableRows()), React.createElement(Modal, {\n      handleClose: this.handleClose,\n      data: this.state.singlePost,\n      open: this.state.open,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default PostTable;","map":{"version":3,"sources":["/home/michael/Development/limbik/limbik_frontend/src/components/table/index.js"],"names":["React","Component","Modal","rows","PostTable","state","loaded","initialOrder","direction","data","singlePost","open","sortImpressionsHandler","e","console","log","props","target","id","sort","a","b","impressions","setState","sortClickHandler","clicks","postStringShortener","string","length","slice","concat","moreInfoClickHandeler","handleClickOpen","postId","parentNode","post","filter","parseInt","handleClose","getTableRows","map","compareDataHandeler","textAlign","url","text","spend","amount","currency","then","collectRows","push","render","width"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport Modal from '../modal/index.js'\n\n\nlet rows = []\n\nclass PostTable extends Component {\n\n\n    state = {\n        loaded : false,\n        initialOrder : [],\n        direction : '',\n        data : [],\n        singlePost : null,\n        open : false \n    }\n\n    sortImpressionsHandler = (e) => {\n    \n        console.log('yeah')\n\n        let data = this.props.data\n      \n        if(e.target.id === 'Assc'){\n            rows = data.sort((a,b)=>{\n                return a.impressions-b.impressions\n                })\n            e.target.id = 'Desc'\n            this.setState({ \n                direction : 'Assc',\n            })\n        }\n        else if(e.target.id === 'Desc'){\n            rows = data.sort((a,b)=>{\n                return b.impressions-a.impressions\n            })\n            e.target.id = 'Assc'\n            this.setState({ direction : 'Desc' })\n            }\n        else{\n            return null\n        }\n    }\n\n    sortClickHandler = (e) => {\n\n        let data = this.props.data\n      \n        if(e.target.id === 'Assc'){\n            rows = data.sort((a,b)=>{\n                return a.clicks-b.clicks\n                })\n            e.target.id = 'Desc'\n            this.setState({ \n                direction : 'Assc',\n            })\n        }\n        else if(e.target.id === 'Desc'){\n            rows = data.sort((a,b)=>{\n                return b.clicks-a.clicks\n            })\n            e.target.id = 'Assc'\n            this.setState({ direction : 'Desc' })\n            }\n        else{\n            return null\n        }\n    }\n\n    postStringShortener = (string) => {\n        if(string && string.length > 50){\n            return string.slice(0,47).concat('...')\n        }\n        else if(string && string.length < 50){\n            return string\n        }\n        else \n            return 'no description'\n    }\n\n    moreInfoClickHandeler = (e) => {\n        this.handleClickOpen()\n        let postId = e.target.parentNode.parentNode.id\n        let post = this.props.data.filter((post => post.id === parseInt(postId)))\n        this.setState({\n            singlePost : post\n        })\n    }\n    handleClickOpen = ()=> {\n        this.setState({\n            open : true\n        })\n  }\n\n    handleClose =()=> {\n        this.setState({\n            open : false\n        })\n  }\n\n\n    getTableRows = () => {\n        return rows.map(post =>\n            <tbody id={`${post.id}`}>\n            <td><button \n                className='ui green button'  \n                onClick={(e)=> this.props.compareDataHandeler(e.target.parentNode.parentNode.id)}>Add to compare</button></td>\n        <td><button\n                onClick={this.moreInfoClickHandeler}\n                className='ui blue button'\n                >More Info\n            </button></td>\n                <td>{post.id}</td>\n                <td style={{textAlign : 'left'}}><a href={post.url} target=\"_blank\">{post.url}</a></td>\n                <td style={{textAlign : 'left'}}>{this.postStringShortener(post.text)}</td>\n                <td style={{textAlign : 'left'}}>{post.clicks}</td>\n                <td style={{textAlign : 'left'}}>{post.impressions}</td>\n                <td style={{textAlign : 'left'}}>{`${post.spend.amount ? post.spend.amount : 0} ${post.spend.currency ? post.spend.currency : ''}`}</td>\n                </tbody>).then(console.log)\n\n        }\n\n    collectRows = () => {\n        if(rows.length <= 0){\n            this.props.data.map(post => rows.push(post))\n        } else if( rows.length !== this.props.data.length){\n            rows = []\n            this.props.data.map(post => rows.push(post))\n        }\n    }\n\n    render() {\n        console.log(this.state.loaded)\n        this.collectRows()\n        return(\n            <div className='table'>\n            <table style={{width : '80vw'}}>\n                <tr>\n                <th>Check</th>\n                <th>Details</th>\n                <th>Post ID</th>\n                <th>URL</th>\n                <th>Text</th>\n                <th><button\n                    className='ui grey button'\n                    name='clicks'\n                    id='Assc'\n                    onClick={this.sortClickHandler}>Clicks</button></th>\n            <th>\n                <button\n                    className='ui grey button'\n                    name='impressions'\n                    id='Assc'\n                    onClick={this.sortImpressionsHandler}>\n                        Impressions\n                </button>\n            </th>\n                <th>Currency</th>\n            </tr>\n            {this.getTableRows()}\n        </table>\n        <Modal\n            handleClose={this.handleClose}\n            data={this.state.singlePost}\n            open={this.state.open} />\n</div>\n    )\n  }\n}\n\nexport default PostTable\n"]},"metadata":{},"sourceType":"module"}