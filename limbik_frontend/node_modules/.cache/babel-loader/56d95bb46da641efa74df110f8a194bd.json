{"ast":null,"code":"var _jsxFileName = \"/home/michael/Development/limbik/limbik_frontend/src/components/home/index.js\";\nimport React, { Component } from 'react';\nimport Table from '../table/index.js';\nimport Search from '../search/index.js';\nimport NewFilter from '../search/filter.js';\nimport Compare from '../compare/index.js';\nimport NavBar from '../navbar/index.js';\nimport Progress from '../progress/index.js';\n\nclass Home extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      index: [],\n      targetFilter: '',\n      filteredData: [],\n      compareData: [],\n      loaded: false\n    };\n\n    this.onChangeHandler = e => {\n      let searchWord = '';\n      searchWord += e.target.value;\n      let filteredData = this.state.index.filter(post => post.id.toString().includes(searchWord));\n      this.setState({\n        filteredData: filteredData\n      });\n    };\n\n    this.filterHandeler = (e, targetProp) => {\n      let filteredData = [];\n      this.state.index.forEach(post => {\n        if (post.targeting[\"\".concat(targetProp)]) {\n          Object.values(post.targeting[\"\".concat(targetProp)]).forEach(target => {\n            if (target === e.target.innerText || target.includes(e.target.innerText)) {\n              filteredData.push(post);\n            }\n          });\n        }\n      });\n      this.setState({\n        filteredData\n      });\n    };\n\n    this.clearFilterHandeler = () => {\n      this.setState({\n        filteredData: ''\n      });\n    };\n\n    this.compareDataHandeler = id => {\n      let post = this.findPostById(id);\n\n      if (this.state.compareData.includes(post[0])) {\n        let compareData = this.state.compareData.filter(postObj => postObj.id !== post[0].id);\n        this.setState({\n          compareData\n        });\n      } else {\n        this.setState({\n          compareData: [...this.state.compareData, post[0]]\n        });\n      }\n    };\n\n    this.findPostById = id => {\n      let post = this.state.index.filter(postObj => postObj.id === parseInt(id));\n      return post;\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"http://localhost:3000/api/v1/posts\").then(res => res.json()).then(data => {\n      this.setState({\n        index: data,\n        loaded: true\n      });\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(NavBar, {\n      onChangeHandler: this.onChangeHandler,\n      searchInput: this.state.search,\n      data: this.state.index,\n      filterHandeler: this.filterHandeler,\n      clearFilterHandeler: this.clearFilterHandeler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, this.state.loaded ? React.createElement(\"div\", {\n      className: \"home\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(Compare, {\n      data: this.state.compareData,\n      removeData: this.compareDataHandeler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }), React.createElement(Table, {\n      data: this.state.filteredData.length > 0 ? this.state.filteredData : this.state.index,\n      compareDataHandeler: this.compareDataHandeler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    })) : React.createElement(Progress, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default Home;","map":{"version":3,"sources":["/home/michael/Development/limbik/limbik_frontend/src/components/home/index.js"],"names":["React","Component","Table","Search","NewFilter","Compare","NavBar","Progress","Home","state","index","targetFilter","filteredData","compareData","loaded","onChangeHandler","e","searchWord","target","value","filter","post","id","toString","includes","setState","filterHandeler","targetProp","forEach","targeting","Object","values","innerText","push","clearFilterHandeler","compareDataHandeler","findPostById","postObj","parseInt","componentDidMount","fetch","then","res","json","data","render","search","length"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport Table from '../table/index.js'\nimport Search from '../search/index.js'\nimport NewFilter from '../search/filter.js'\nimport Compare from '../compare/index.js'\nimport NavBar from '../navbar/index.js'\nimport Progress from '../progress/index.js'\n\n\nclass Home extends Component {\n\n\n    state = {\n        index : [],\n        targetFilter : '',\n        filteredData : [],\n        compareData : [],\n        loaded : false\n    }\n\n\n    componentDidMount(){\n        fetch(`http://localhost:3000/api/v1/posts`)\n            .then(res => res.json())\n            .then(data =>{\n                this.setState({\n                    index : data,\n                    loaded : true\n                })\n            })\n    }\n\n    onChangeHandler = (e) => {\n        let searchWord = ''\n        searchWord += e.target.value\n        let filteredData = this.state.index.filter(post => post.id.toString().includes(searchWord))\n        \n        this.setState({filteredData : filteredData})\n    }\n\n\n    filterHandeler = (e, targetProp) => {\n        let filteredData = []\n        this.state.index.forEach((post)=>{\n            if (post.targeting[`${targetProp}`]){\n                Object.values(post.targeting[`${targetProp}`]).forEach((target)=>{\n                    if(target === e.target.innerText || target.includes(e.target.innerText)){\n                        filteredData.push(post)\n                    }\n                })\n            }\n        })\n        this.setState({filteredData})\n    }\n\n    clearFilterHandeler = () => {\n        this.setState({\n            filteredData : ''\n        })\n    }\n\n    compareDataHandeler = (id) => {\n        let post = this.findPostById(id)\n        if(this.state.compareData.includes(post[0])){\n            let compareData = this.state.compareData.filter(postObj => postObj.id !== post[0].id )\n            this.setState({compareData})\n        }else {\n            this.setState({\n                compareData : [...this.state.compareData, post[0]]\n            })\n        }\n    }\n\n    findPostById = (id) =>{\n        let post = this.state.index.filter(postObj => postObj.id === parseInt(id))\n        return post\n    }\n\n    render(){\n        return(\n            <div>\n                <NavBar\n                    onChangeHandler={this.onChangeHandler}\n                    searchInput={this.state.search}\n                    data={this.state.index}\n                    filterHandeler={this.filterHandeler}\n                    clearFilterHandeler={this.clearFilterHandeler}\n                >\n                        {this.state.loaded ?\n                    <div className='home'>\n                        <Compare \n                            data={this.state.compareData}\n                            removeData={this.compareDataHandeler}\n                        />\n                        <Table \n                            data={this.state.filteredData.length > 0 ? this.state.filteredData : this.state.index}\n                            compareDataHandeler={this.compareDataHandeler}\n                        />\n                        </div> : <Progress />}\n                </NavBar>\n            </div>\n        )\n    }\n}\n\nexport default Home\n"]},"metadata":{},"sourceType":"module"}