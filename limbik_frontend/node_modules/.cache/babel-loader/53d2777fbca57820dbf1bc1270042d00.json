{"ast":null,"code":"var _jsxFileName = \"/home/michael/Development/limbik/limbik_frontend/src/components/table/index.js\";\nimport _ from 'lodash';\nimport React, { Component } from 'react';\nimport { Table } from 'semantic-ui-react';\nconst tableData = [];\n\nclass PostTable extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      column: null,\n      data: tableData,\n      direction: null\n    };\n\n    this.postStringShortener = string => {\n      if (string) {\n        return string.slice(0, 29).concat('...');\n      } else {\n        return 'no description';\n      }\n    };\n\n    this.getTableData = () => {\n      this.props.data.forEach(post => {\n        tableData.push({\n          postid: post.id,\n          text: this.postStringShortener(post.text),\n          clicks: post.impressions\n        });\n      });\n    };\n\n    this.handleSort = clickedColumn => () => {\n      const _this$state = this.state,\n            column = _this$state.column,\n            data = _this$state.data,\n            direction = _this$state.direction;\n\n      if (column !== clickedColumn) {\n        this.setState({\n          column: clickedColumn,\n          data: _.sortBy(data, [clickedColumn]),\n          direction: 'ascending'\n        });\n        return;\n      }\n\n      this.setState({\n        data: data.reverse(),\n        direction: direction === 'ascending' ? 'descending' : 'ascending'\n      });\n    };\n  }\n\n  render() {\n    this.getTableData();\n    const _this$state2 = this.state,\n          column = _this$state2.column,\n          data = _this$state2.data,\n          direction = _this$state2.direction;\n    return React.createElement(Table, {\n      sortable: true,\n      celled: true,\n      fixed: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(Table.Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(Table.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(Table.HeaderCell, {\n      sorted: column === 'postid' ? direction : null,\n      onClick: this.handleSort('postid'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, \"Post ID\"), React.createElement(Table.HeaderCell, {\n      sorted: column === 'text' ? direction : null,\n      onClick: this.handleSort('text'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, \"Text\"), React.createElement(Table.HeaderCell, {\n      sorted: column === 'clicks' ? direction : null,\n      onClick: this.handleSort('clicks'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, \"Clicks\"))), React.createElement(Table.Body, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, _.map(data, ({\n      postid,\n      text,\n      clicks\n    }) => React.createElement(Table.Row, {\n      key: postid,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(Table.Cell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, postid), React.createElement(Table.Cell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, text), React.createElement(Table.Cell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, clicks)))));\n  }\n\n}\n\nexport default PostTable;","map":{"version":3,"sources":["/home/michael/Development/limbik/limbik_frontend/src/components/table/index.js"],"names":["_","React","Component","Table","tableData","PostTable","state","column","data","direction","postStringShortener","string","slice","concat","getTableData","props","forEach","post","push","postid","id","text","clicks","impressions","handleSort","clickedColumn","setState","sortBy","reverse","render","map"],"mappings":"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","sourcesContent":["import _ from 'lodash'\nimport React, { Component } from 'react'\nimport { Table } from 'semantic-ui-react'\n\nconst tableData = []\n\n\n\nclass PostTable extends Component {\n\n  state = {\n    column: null,\n    data: tableData,\n    direction: null,\n  }\n\n    postStringShortener = (string) => {\n        if (string){\n            return string.slice(0,29).concat('...')\n        } else {\n            return 'no description'\n\n        }\n    }\n    \n\n    getTableData = () => {\n        this.props.data.forEach((post)=>{\n            tableData.push({postid: post.id , text: this.postStringShortener(post.text), clicks: post.impressions})\n        })\n    }\n\n  handleSort = clickedColumn => () => {\n    const { column, data, direction } = this.state\n\n    if (column !== clickedColumn) {\n      this.setState({\n        column: clickedColumn,\n        data: _.sortBy(data, [clickedColumn]),\n        direction: 'ascending',\n      })\n\n      return\n    }\n\n    this.setState({\n      data: data.reverse(),\n      direction: direction === 'ascending' ? 'descending' : 'ascending',\n    })\n  }\n\n    render() {\n        this.getTableData()\n      const { column, data, direction } = this.state\n return (\n      <Table sortable celled fixed>\n        <Table.Header>\n          <Table.Row>\n            <Table.HeaderCell\n              sorted={column === 'postid' ? direction : null}\n              onClick={this.handleSort('postid')}\n            >\n              Post ID\n            </Table.HeaderCell>\n            <Table.HeaderCell\n              sorted={column === 'text' ? direction : null}\n              onClick={this.handleSort('text')}\n            >\n              Text\n            </Table.HeaderCell>\n            <Table.HeaderCell\n              sorted={column === 'clicks' ? direction : null}\n              onClick={this.handleSort('clicks')}\n            >\n              Clicks\n            </Table.HeaderCell>\n          </Table.Row>\n        </Table.Header>\n        <Table.Body>\n          {_.map(data, ({ postid, text, clicks }) => (\n            <Table.Row key={postid}>\n              <Table.Cell>{postid}</Table.Cell>\n              <Table.Cell>{text}</Table.Cell>\n              <Table.Cell>{clicks}</Table.Cell>\n            </Table.Row>\n          ))}\n        </Table.Body>\n      </Table>\n    )\n  }\n}\n\nexport default PostTable\n"]},"metadata":{},"sourceType":"module"}