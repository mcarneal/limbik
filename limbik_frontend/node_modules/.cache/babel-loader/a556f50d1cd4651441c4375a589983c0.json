{"ast":null,"code":"var _jsxFileName = \"/home/michael/Development/limbik/limbik_frontend/src/components/search/filterSelect.js\";\nimport React, { Component } from 'react';\nimport { Select } from 'semantic-ui-react';\nconst types = [];\nconst allTypes = {};\n\nclass FilterSelect extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      targetFilter: ''\n    };\n\n    this.collectTargetTypes = () => {\n      if (this.props.data) {\n        this.props.data.map(post => {\n          Object.entries(post.targeting).map(item => {\n            if (item[1]) {\n              Object.entries(item[1]).map(value => {\n                value.map(a => {\n                  if (allTypes[\"\".concat(item[0])]) {\n                    if (!allTypes[\"\".concat(item[0])].includes(a)) {\n                      allTypes[\"\".concat(item[0])].push(a);\n                    }\n                  } else {\n                    allTypes[\"\".concat(item[0])] = [];\n                  }\n                });\n              });\n            }\n          });\n        });\n      }\n    };\n\n    this.assignKeys = () => {\n      this.collectTargetTypes();\n\n      if (types.length > 0) {\n        let keyNumber = 1;\n        Object.keys(allTypes).map(attribute => {\n          types.push({\n            key: \"\".concat(keyNumber, \"_\").concat(attribute),\n            text: attribute.replace(/_/g, ' '),\n            value: attribute\n          });\n          keyNumber += 1;\n        });\n      }\n    };\n\n    this.onChangeHandle = e => {\n      this.setState({\n        targetFilter: e.target.innerText.replace(/ /g, '_')\n      });\n    };\n  }\n\n  render() {\n    this.assignKeys();\n    console.log(this.state);\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(Select, {\n      options: types,\n      defaultValue: \"articles\",\n      onChange: e => this.onChangeHandle(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }), this.state.targetFilter ? React.createElement(Select, {\n      options: '',\n      defaultValues: \"articles\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }) : null);\n  }\n\n}\n\nexport default FilterSelect;","map":{"version":3,"sources":["/home/michael/Development/limbik/limbik_frontend/src/components/search/filterSelect.js"],"names":["React","Component","Select","types","allTypes","FilterSelect","state","targetFilter","collectTargetTypes","props","data","map","post","Object","entries","targeting","item","value","a","includes","push","assignKeys","length","keyNumber","keys","attribute","key","text","replace","onChangeHandle","e","setState","target","innerText","render","console","log"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,MAAT,QAAuB,mBAAvB;AAEA,MAAMC,KAAK,GAAG,EAAd;AAEA,MAAMC,QAAQ,GAAG,EAAjB;;AAEA,MAAMC,YAAN,SAA2BJ,SAA3B,CAAoC;AAAA;AAAA;AAAA,SAEhCK,KAFgC,GAExB;AACJC,MAAAA,YAAY,EAAG;AADX,KAFwB;;AAAA,SAMhCC,kBANgC,GAMX,MAAM;AACvB,UAAG,KAAKC,KAAL,CAAWC,IAAd,EAAmB;AACf,aAAKD,KAAL,CAAWC,IAAX,CAAgBC,GAAhB,CAAqBC,IAAD,IAAS;AACzBC,UAAAA,MAAM,CAACC,OAAP,CAAeF,IAAI,CAACG,SAApB,EAA+BJ,GAA/B,CAAoCK,IAAD,IAAQ;AACvC,gBAAGA,IAAI,CAAC,CAAD,CAAP,EAAW;AACPH,cAAAA,MAAM,CAACC,OAAP,CAAeE,IAAI,CAAC,CAAD,CAAnB,EAAwBL,GAAxB,CAA6BM,KAAD,IAAS;AACjCA,gBAAAA,KAAK,CAACN,GAAN,CAAWO,CAAD,IAAK;AACX,sBAAGd,QAAQ,WAAIY,IAAI,CAAC,CAAD,CAAR,EAAX,EAA0B;AACtB,wBAAG,CAACZ,QAAQ,WAAIY,IAAI,CAAC,CAAD,CAAR,EAAR,CAAuBG,QAAvB,CAAgCD,CAAhC,CAAJ,EAAuC;AACnCd,sBAAAA,QAAQ,WAAIY,IAAI,CAAC,CAAD,CAAR,EAAR,CAAuBI,IAAvB,CAA4BF,CAA5B;AACH;AACJ,mBAJD,MAKI;AACAd,oBAAAA,QAAQ,WAAIY,IAAI,CAAC,CAAD,CAAR,EAAR,GAAuB,EAAvB;AACH;AACJ,iBATD;AAUH,eAXD;AAYH;AACJ,WAfD;AAgBH,SAjBD;AAkBH;AACJ,KA3B+B;;AAAA,SA6BhCK,UA7BgC,GA6BnB,MAAM;AACf,WAAKb,kBAAL;;AACA,UAAIL,KAAK,CAACmB,MAAN,GAAe,CAAnB,EAAqB;AACjB,YAAIC,SAAS,GAAG,CAAhB;AACAV,QAAAA,MAAM,CAACW,IAAP,CAAYpB,QAAZ,EAAsBO,GAAtB,CAA2Bc,SAAD,IAAa;AACnCtB,UAAAA,KAAK,CAACiB,IAAN,CAAW;AAACM,YAAAA,GAAG,YAAKH,SAAL,cAAkBE,SAAlB,CAAJ;AAAmCE,YAAAA,IAAI,EAAEF,SAAS,CAACG,OAAV,CAAkB,IAAlB,EAAuB,GAAvB,CAAzC;AAAsEX,YAAAA,KAAK,EAAGQ;AAA9E,WAAX;AACAF,UAAAA,SAAS,IAAE,CAAX;AACH,SAHD;AAIH;AACJ,KAtC+B;;AAAA,SAwChCM,cAxCgC,GAwCdC,CAAD,IAAM;AACnB,WAAKC,QAAL,CAAc;AACVxB,QAAAA,YAAY,EAAGuB,CAAC,CAACE,MAAF,CAASC,SAAT,CAAmBL,OAAnB,CAA2B,IAA3B,EAAiC,GAAjC;AADL,OAAd;AAGH,KA5C+B;AAAA;;AA8ChCM,EAAAA,MAAM,GAAE;AACJ,SAAKb,UAAL;AACAc,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAK9B,KAAjB;AACA,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAEH,KAAjB;AAAwB,MAAA,YAAY,EAAC,UAArC;AAAgD,MAAA,QAAQ,EAAG2B,CAAD,IAAM,KAAKD,cAAL,CAAoBC,CAApB,CAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAES,KAAKxB,KAAL,CAAWC,YAAX,GAA0B,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAE,EAAjB;AAAqB,MAAA,aAAa,EAAC,UAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAA1B,GAA6E,IAFtF,CADJ;AAMH;;AAvD+B;;AA0DpC,eAAeF,YAAf","sourcesContent":["import React ,{ Component } from 'react'\nimport { Select } from 'semantic-ui-react'\n\nconst types = []\n\nconst allTypes = {}\n\nclass FilterSelect extends Component{\n\n    state = {\n        targetFilter : ''\n    }\n\n    collectTargetTypes = () => {\n        if(this.props.data){\n            this.props.data.map((post)=> {\n                Object.entries(post.targeting).map((item)=>{\n                    if(item[1]){\n                        Object.entries(item[1]).map((value)=>{\n                            value.map((a)=>{\n                                if(allTypes[`${item[0]}`]){\n                                    if(!allTypes[`${item[0]}`].includes(a)){\n                                        allTypes[`${item[0]}`].push(a)\n                                    }\n                                }\n                                else{\n                                    allTypes[`${item[0]}`]=[]\n                                }\n                            }) \n                        })\n                    }\n                })  \n            })\n        }\n    }\n\n    assignKeys = () => {\n        this.collectTargetTypes()\n        if (types.length > 0){\n            let keyNumber = 1\n            Object.keys(allTypes).map((attribute)=>{\n                types.push({key :`${keyNumber}_${attribute}`, text: attribute.replace(/_/g,' '), value : attribute})\n                keyNumber+=1\n            })\n        }\n    }\n\n    onChangeHandle = (e) =>{\n        this.setState({\n            targetFilter : e.target.innerText.replace(/ /g, '_')\n        })\n    }\n\n    render(){\n        this.assignKeys()\n        console.log(this.state)\n        return(\n            <div>\n                <Select options={types} defaultValue='articles' onChange={(e)=> this.onChangeHandle(e)}/>\n                    {this.state.targetFilter ? <Select options={''} defaultValues='articles' /> : null }\n    </div>\n        )\n    }\n}\n\nexport default FilterSelect\n\n"]},"metadata":{},"sourceType":"module"}