{"ast":null,"code":"var _jsxFileName = \"/home/michael/Development/limbik/limbik_frontend/src/components/table/index.js\";\nimport React, { Component } from 'react';\nlet rows = [];\n\nclass PostTable extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      initialOrder: [],\n      direction: '',\n      data: []\n    };\n\n    this.sortImpressionsHandler = e => {\n      let data = this.props.data;\n\n      if (e.target.id === 'Assc') {\n        rows = data.sort((a, b) => {\n          return a.impressions - b.impressions;\n        });\n        e.target.id = 'Desc';\n        this.setState({\n          direction: 'Assc'\n        });\n      } else if (e.target.id === 'Desc') {\n        rows = data.sort((a, b) => {\n          return b.impressions - a.impressions;\n        });\n        e.target.id = 'Assc';\n        this.setState({\n          direction: 'Desc'\n        });\n      } else {\n        return null;\n      }\n    };\n\n    this.sortClicksHandler = e => {\n      let data = this.props.data;\n\n      if (e.target.id === 'Assc') {\n        rows = data.sort((a, b) => {\n          return a.clicks - b.clicks;\n        });\n        e.target.id = 'Desc';\n        this.setState({\n          direction: 'Assc'\n        });\n      } else if (e.target.id === 'Desc') {\n        rows = data.sort((a, b) => {\n          return b.clicks - a.clicks;\n        });\n        e.target.id = 'Assc';\n        this.setState({\n          direction: 'Desc'\n        });\n      } else {\n        return null;\n      }\n    };\n\n    this.postStringShortener = string => {\n      if (string && string.length > 50) {\n        return string.slice(0, 50).concat('...');\n      } else if (string && string.length < 50) {\n        return string;\n      } else return 'no description';\n    };\n\n    this.getTableRows = () => {\n      return rows.map(post => React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, post.id), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, this.postStringShortener(post.text)), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, post.clicks), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, post.impressions), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, \"\".concat(post.spend.amount ? post.spend.amount : 0, \" \").concat(post.spend.currency ? post.spend.currency : ''))));\n    };\n\n    this.collectRows = () => {\n      if (rows.length <= 0) {\n        this.props.data.map(post => rows.push(post));\n      }\n    };\n  }\n\n  render() {\n    this.collectRows();\n    return React.createElement(\"div\", {\n      className: \"table\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, React.createElement(\"table\", {\n      style: {\n        width: '95vw'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, \"Post ID\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, \"Text\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      name: \"clicks\",\n      id: \"Assc\",\n      onClick: this.sortClickHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, \"Clicks\")), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      name: \"impressions\",\n      id: \"Assc\",\n      onClick: this.sorImpressionstHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, \"Impressions\")), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, \"Currency\")), this.getTableRows()));\n  }\n\n}\n\nexport default PostTable;","map":{"version":3,"sources":["/home/michael/Development/limbik/limbik_frontend/src/components/table/index.js"],"names":["React","Component","rows","PostTable","state","initialOrder","direction","data","sortImpressionsHandler","e","props","target","id","sort","a","b","impressions","setState","sortClicksHandler","clicks","postStringShortener","string","length","slice","concat","getTableRows","map","post","text","spend","amount","currency","collectRows","push","render","width","sortClickHandler","sorImpressionstHandler"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\n\n\nlet rows = []\n\nclass PostTable extends Component {\n\n\n    state = {\n        initialOrder : [],\n        direction : '',\n        data : []\n    }\n\n    sortImpressionsHandler = (e) => {\n\n        let data = this.props.data\n      \n        if(e.target.id === 'Assc'){\n            rows = data.sort((a,b)=>{\n                return a.impressions-b.impressions\n                })\n            e.target.id = 'Desc'\n            this.setState({ \n                direction : 'Assc',\n            })\n        }\n        else if(e.target.id === 'Desc'){\n            rows = data.sort((a,b)=>{\n                return b.impressions-a.impressions\n            })\n            e.target.id = 'Assc'\n            this.setState({ direction : 'Desc' })\n            }\n        else{\n            return null\n        }\n    }\n\n    sortClicksHandler = (e) => {\n\n        let data = this.props.data\n      \n        if(e.target.id === 'Assc'){\n            rows = data.sort((a,b)=>{\n                return a.clicks-b.clicks\n                })\n            e.target.id = 'Desc'\n            this.setState({ \n                direction : 'Assc',\n            })\n        }\n        else if(e.target.id === 'Desc'){\n            rows = data.sort((a,b)=>{\n                return b.clicks-a.clicks\n            })\n            e.target.id = 'Assc'\n            this.setState({ direction : 'Desc' })\n            }\n        else{\n            return null\n        }\n    }\n\n    postStringShortener = (string) => {\n        if(string && string.length > 50){\n            return string.slice(0,50).concat('...')\n        }\n        else if(string && string.length < 50){\n            return string\n        }\n        else \n            return 'no description'\n    }\n\n    getTableRows = () => {\n            return rows.map(post => <tr>\n                <td>{post.id}</td>\n                <td>{this.postStringShortener(post.text)}</td>\n                <td>{post.clicks}</td>\n                <td>{post.impressions}</td>\n                <td>{`${post.spend.amount ? post.spend.amount : 0} ${post.spend.currency ? post.spend.currency : ''}`}</td>\n                </tr>)\n\n        }\n\n    collectRows = () => {\n        if(rows.length <= 0){\n            this.props.data.map(post => rows.push(post))\n        }\n    }\n\n    render() {\n        this.collectRows()\n        return(\n            <div className='table'>\n            <table style={{width : '95vw'}}>\n                <tr>\n                <th>Post ID</th>\n                <th>Text</th>\n                <th><button\n                    name='clicks'\n                    id='Assc'\n                    onClick={this.sortClickHandler}>Clicks</button></th>\n            <th>\n                <button\n                    name='impressions'\n                    id='Assc'\n                    onClick={this.sorImpressionstHandler}>\n                        Impressions\n                </button>\n            </th>\n                <th>Currency</th>\n            </tr>\n            {this.getTableRows()}\n        </table>\n</div>\n    )\n  }\n}\n\nexport default PostTable\n"]},"metadata":{},"sourceType":"module"}