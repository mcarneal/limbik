{"ast":null,"code":"var _jsxFileName = \"/home/michael/Development/limbik/limbik_frontend/src/components/modal/analyze.js\";\nimport React, { Component } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItem from '@material-ui/core/ListItem';\nimport List from '@material-ui/core/List';\nimport Divider from '@material-ui/core/Divider';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Slide from '@material-ui/core/Slide';\nimport Show from '../show/index';\nimport Grid from '@material-ui/core/Grid';\nconst useStyles = makeStyles(theme => ({\n  appBar: {\n    position: 'relative'\n  },\n  title: {\n    marginLeft: theme.spacing(2),\n    flex: 1\n  }\n}));\nconst Transition = React.forwardRef(function Transition(props, ref) {\n  return React.createElement(Slide, Object.assign({\n    direction: \"up\",\n    ref: ref\n  }, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }));\n});\n\nclass FullScreenDialog extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleClickOpen = () => {\n      this.setState({\n        open: true\n      });\n    };\n\n    this.handleClose = () => {\n      this.setState({\n        open: false\n      });\n    };\n\n    this.renderPost = () => {\n      return this.props.data.map(post => React.createElement(Show, {\n        data: [post],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }));\n    };\n\n    this.renderDuplicates = () => {\n      if (this.props.duplicates.length > 0) {\n        return this.props.duplicates.map(value => React.createElement(\"h4\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 53\n          },\n          __self: this\n        }, value));\n      }\n    };\n  }\n\n  render() {\n    console.log('found my dups', this.props.duplicates);\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(Dialog, {\n      fullScreen: true,\n      open: this.props.open,\n      onClose: this.props.handleClose,\n      TransitionComponent: Transition,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(AppBar, {\n      style: {\n        position: 'relative'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(Toolbar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(IconButton, {\n      edge: \"start\",\n      color: \"inherit\",\n      onClick: this.props.handleClose,\n      \"aria-label\": \"close\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(CloseIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    })), React.createElement(Typography, {\n      variant: \"h6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, \"Analyzing Posts\"))), React.createElement(Grid, {\n      container: true,\n      justify: \"space-evenly\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      xs: 12,\n      sm: 6,\n      md: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }), React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, \"Selected Posts\"), React.createElement(\"div\", {\n      style: {\n        marginTop: '15vh',\n        height: '75vh',\n        overflowY: 'scroll'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, this.renderPost())), React.createElement(Grid, {\n      xs: 12,\n      sm: 6,\n      md: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }), React.createElement(\"h2\", {\n      style: {\n        textDecoration: 'underline'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, \"Two or More of these post have the following targeting values in common\"), this.renderDuplicates()))));\n  }\n\n}\n\nexport default FullScreenDialog;","map":{"version":3,"sources":["/home/michael/Development/limbik/limbik_frontend/src/components/modal/analyze.js"],"names":["React","Component","makeStyles","Button","Dialog","ListItemText","ListItem","List","Divider","AppBar","Toolbar","IconButton","Typography","CloseIcon","Slide","Show","Grid","useStyles","theme","appBar","position","title","marginLeft","spacing","flex","Transition","forwardRef","props","ref","FullScreenDialog","handleClickOpen","setState","open","handleClose","renderPost","data","map","post","renderDuplicates","duplicates","length","value","render","console","log","marginTop","height","overflowY","textDecoration"],"mappings":"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","sourcesContent":["import React,{ Component } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItem from '@material-ui/core/ListItem';\nimport List from '@material-ui/core/List';\nimport Divider from '@material-ui/core/Divider';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Slide from '@material-ui/core/Slide';\nimport Show from '../show/index'\nimport Grid from '@material-ui/core/Grid'\n\nconst useStyles = makeStyles(theme => ({\n    appBar: {\n        position: 'relative',\n    },\n    title: {\n        marginLeft: theme.spacing(2),\n        flex: 1,\n    },\n}));\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n  return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nclass FullScreenDialog extends Component{\n\n\n\n    handleClickOpen = ()=> {\n        this.setState({\n            open : true\n        })\n  }\n\n    handleClose =()=> {\n        this.setState({\n            open : false\n        })\n  }\n    renderPost = () =>{\n        return this.props.data.map(post=> <Show data={[post]} />)\n    }\n\n    renderDuplicates = () => {\n        if (this.props.duplicates.length > 0){\n            return this.props.duplicates.map(value => <h4>{value}</h4>)\n        }\n    }\n\n    render(){\n    \n        console.log('found my dups', this.props.duplicates)\n\n  return (\n    <div>\n      <Dialog fullScreen open={this.props.open} onClose={this.props.handleClose} TransitionComponent={Transition}>\n        <AppBar style={{position : 'relative'}}>\n          <Toolbar>\n            <IconButton edge=\"start\" color=\"inherit\" onClick={this.props.handleClose} aria-label=\"close\">\n              <CloseIcon />\n            </IconButton>\n            <Typography variant=\"h6\">\n                    Analyzing Posts\n            </Typography>\n          </Toolbar>\n      </AppBar>\n            <Grid container\n                justify='space-evenly'\n            >\n                <Grid xs={12} sm={6} md={4}>\n                    <br></br>\n                    <br></br>\n                    <h2>Selected Posts</h2>\n      <div style={{ marginTop : '15vh',height : '75vh', overflowY : 'scroll'}}>\n                        {this.renderPost()}\n            </div>\n                </Grid>\n                <Grid xs={12} sm={6} md={4}>\n                    <br></br>\n                    <h2 style={{textDecoration : 'underline'}}>Two or More of these post have the following targeting values in common</h2>\n                        {this.renderDuplicates()}\n                </Grid>\n            </Grid>\n      </Dialog>\n  </div>\n  );\n }\n}\n\nexport default FullScreenDialog\n\n"]},"metadata":{},"sourceType":"module"}