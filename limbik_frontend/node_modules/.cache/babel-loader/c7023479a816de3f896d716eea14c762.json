{"ast":null,"code":"var _jsxFileName = \"/home/michael/Development/limbik/limbik_frontend/src/components/table/semantic-table.js\";\nimport _ from 'lodash';\nimport React, { Component } from 'react';\nimport { Table } from 'semantic-ui-react';\nconst tableData = [{\n  name: 'John',\n  age: 15,\n  gender: 'Male'\n}, {\n  name: 'Amber',\n  age: 40,\n  gender: 'Female'\n}, {\n  name: 'Leslie',\n  age: 25,\n  gender: 'Other'\n}, {\n  name: 'Ben',\n  age: 70,\n  gender: 'Male'\n}];\nexport default class TableExampleSortable extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      column: null,\n      data: tableData,\n      direction: null\n    };\n\n    this.getTableData = () => {\n      console.log(this.props.data);\n    };\n\n    this.handleSort = clickedColumn => () => {\n      const _this$state = this.state,\n            column = _this$state.column,\n            data = _this$state.data,\n            direction = _this$state.direction;\n\n      if (column !== clickedColumn) {\n        this.setState({\n          column: clickedColumn,\n          data: _.sortBy(data, [clickedColumn]),\n          direction: 'ascending'\n        });\n        return;\n      }\n\n      this.setState({\n        data: data.reverse(),\n        direction: direction === 'ascending' ? 'descending' : 'ascending'\n      });\n    };\n  }\n\n  render() {\n    this.getTableData();\n    const _this$state2 = this.state,\n          column = _this$state2.column,\n          data = _this$state2.data,\n          direction = _this$state2.direction;\n    return React.createElement(Table, {\n      sortable: true,\n      celled: true,\n      fixed: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(Table.Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(Table.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(Table.HeaderCell, {\n      sorted: column === 'name' ? direction : null,\n      onClick: this.handleSort('name'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, \"Name\"), React.createElement(Table.HeaderCell, {\n      sorted: column === 'age' ? direction : null,\n      onClick: this.handleSort('age'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, \"Age\"), React.createElement(Table.HeaderCell, {\n      sorted: column === 'gender' ? direction : null,\n      onClick: this.handleSort('gender'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, \"Gender\"))), React.createElement(Table.Body, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, _.map(data, ({\n      age,\n      gender,\n      name\n    }) => React.createElement(Table.Row, {\n      key: name,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(Table.Cell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, name), React.createElement(Table.Cell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, age), React.createElement(Table.Cell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, gender)))));\n  }\n\n}","map":{"version":3,"sources":["/home/michael/Development/limbik/limbik_frontend/src/components/table/semantic-table.js"],"names":["_","React","Component","Table","tableData","name","age","gender","TableExampleSortable","state","column","data","direction","getTableData","console","log","props","handleSort","clickedColumn","setState","sortBy","reverse","render","map"],"mappings":"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","sourcesContent":["import _ from 'lodash'\nimport React, { Component } from 'react'\nimport { Table } from 'semantic-ui-react'\n\nconst tableData = [\n  { name: 'John', age: 15, gender: 'Male' },\n  { name: 'Amber', age: 40, gender: 'Female' },\n  { name: 'Leslie', age: 25, gender: 'Other' },\n  { name: 'Ben', age: 70, gender: 'Male' },\n]\n\n\n\nexport default class TableExampleSortable extends Component {\n  state = {\n    column: null,\n    data: tableData,\n    direction: null,\n  }\n\n    getTableData = () => {\n        console.log(this.props.data)\n    }\n\n  handleSort = clickedColumn => () => {\n    const { column, data, direction } = this.state\n\n    if (column !== clickedColumn) {\n      this.setState({\n        column: clickedColumn,\n        data: _.sortBy(data, [clickedColumn]),\n        direction: 'ascending',\n      })\n\n      return\n    }\n\n    this.setState({\n      data: data.reverse(),\n      direction: direction === 'ascending' ? 'descending' : 'ascending',\n    })\n  }\n\n    render() {\n        this.getTableData()\n      const { column, data, direction } = this.state\n return (\n      <Table sortable celled fixed>\n        <Table.Header>\n          <Table.Row>\n            <Table.HeaderCell\n              sorted={column === 'name' ? direction : null}\n              onClick={this.handleSort('name')}\n            >\n              Name\n            </Table.HeaderCell>\n            <Table.HeaderCell\n              sorted={column === 'age' ? direction : null}\n              onClick={this.handleSort('age')}\n            >\n              Age\n            </Table.HeaderCell>\n            <Table.HeaderCell\n              sorted={column === 'gender' ? direction : null}\n              onClick={this.handleSort('gender')}\n            >\n              Gender\n            </Table.HeaderCell>\n          </Table.Row>\n        </Table.Header>\n        <Table.Body>\n          {_.map(data, ({ age, gender, name }) => (\n            <Table.Row key={name}>\n              <Table.Cell>{name}</Table.Cell>\n              <Table.Cell>{age}</Table.Cell>\n              <Table.Cell>{gender}</Table.Cell>\n            </Table.Row>\n          ))}\n        </Table.Body>\n      </Table>\n    )\n  }\n}\n\n"]},"metadata":{},"sourceType":"module"}