{"ast":null,"code":"var _jsxFileName = \"/home/michael/Development/limbik/limbik_frontend/src/components/table/index.js\";\nimport React, { Component } from 'react';\nimport Modal from '../modal/index.js';\nlet rows = [];\n\nclass PostTable extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      initialOrder: [],\n      direction: '',\n      data: [],\n      singlePost: null\n    };\n\n    this.sortImpressionsHandler = e => {\n      console.log('yeah');\n      let data = this.props.data;\n\n      if (e.target.id === 'Assc') {\n        rows = data.sort((a, b) => {\n          return a.impressions - b.impressions;\n        });\n        e.target.id = 'Desc';\n        this.setState({\n          direction: 'Assc'\n        });\n      } else if (e.target.id === 'Desc') {\n        rows = data.sort((a, b) => {\n          return b.impressions - a.impressions;\n        });\n        e.target.id = 'Assc';\n        this.setState({\n          direction: 'Desc'\n        });\n      } else {\n        return null;\n      }\n    };\n\n    this.sortClickHandler = e => {\n      let data = this.props.data;\n\n      if (e.target.id === 'Assc') {\n        rows = data.sort((a, b) => {\n          return a.clicks - b.clicks;\n        });\n        e.target.id = 'Desc';\n        this.setState({\n          direction: 'Assc'\n        });\n      } else if (e.target.id === 'Desc') {\n        rows = data.sort((a, b) => {\n          return b.clicks - a.clicks;\n        });\n        e.target.id = 'Assc';\n        this.setState({\n          direction: 'Desc'\n        });\n      } else {\n        return null;\n      }\n    };\n\n    this.postStringShortener = string => {\n      if (string && string.length > 50) {\n        return string.slice(0, 47).concat('...');\n      } else if (string && string.length < 50) {\n        return string;\n      } else return 'no description';\n    };\n\n    this.moreInfoClickHandeler = e => {\n      let postId = e.target.parentNode.parentNode.id;\n      let post = this.props.data.filter(post => post.id === parseInt(postId));\n      console.log(post);\n    };\n\n    this.getTableRows = () => {\n      return rows.map(post => React.createElement(\"tbody\", {\n        id: \"\".concat(post.id),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"ui green button\",\n        onClick: e => this.props.compareDataHandeler(e.target.parentNode.parentNode.id),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, \"Add to compare\")), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        onClick: this.moreInfoClickHandeler,\n        className: \"ui blue button\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, \"More Info\")), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, post.id), React.createElement(\"td\", {\n        style: {\n          textAlign: 'left'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        href: post.url,\n        target: \"_blank\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, post.url)), React.createElement(\"td\", {\n        style: {\n          textAlign: 'left'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, this.postStringShortener(post.text)), React.createElement(\"td\", {\n        style: {\n          textAlign: 'left'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, post.clicks), React.createElement(\"td\", {\n        style: {\n          textAlign: 'left'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, post.impressions), React.createElement(\"td\", {\n        style: {\n          textAlign: 'left'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, \"\".concat(post.spend.amount ? post.spend.amount : 0, \" \").concat(post.spend.currency ? post.spend.currency : ''))));\n    };\n\n    this.collectRows = () => {\n      if (rows.length <= 0) {\n        this.props.data.map(post => rows.push(post));\n      } else if (rows.length !== this.props.data.length) {\n        rows = [];\n        this.props.data.map(post => rows.push(post));\n      }\n    };\n  }\n\n  render() {\n    this.collectRows();\n    return React.createElement(\"div\", {\n      className: \"table\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, React.createElement(\"table\", {\n      style: {\n        width: '80vw'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, \"Check\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, \"Details\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, \"Post ID\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, \"URL\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, \"Text\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"ui grey button\",\n      name: \"clicks\",\n      id: \"Assc\",\n      onClick: this.sortClickHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, \"Clicks\")), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"ui grey button\",\n      name: \"impressions\",\n      id: \"Assc\",\n      onClick: this.sortImpressionsHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, \"Impressions\")), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, \"Currency\")), this.getTableRows()), React.createElement(Modal, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default PostTable;","map":{"version":3,"sources":["/home/michael/Development/limbik/limbik_frontend/src/components/table/index.js"],"names":["React","Component","Modal","rows","PostTable","state","initialOrder","direction","data","singlePost","sortImpressionsHandler","e","console","log","props","target","id","sort","a","b","impressions","setState","sortClickHandler","clicks","postStringShortener","string","length","slice","concat","moreInfoClickHandeler","postId","parentNode","post","filter","parseInt","getTableRows","map","compareDataHandeler","textAlign","url","text","spend","amount","currency","collectRows","push","render","width"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport Modal from '../modal/index.js'\n\n\nlet rows = []\n\nclass PostTable extends Component {\n\n\n    state = {\n        initialOrder : [],\n        direction : '',\n        data : [],\n        singlePost : null\n    }\n\n    sortImpressionsHandler = (e) => {\n    \n        console.log('yeah')\n\n        let data = this.props.data\n      \n        if(e.target.id === 'Assc'){\n            rows = data.sort((a,b)=>{\n                return a.impressions-b.impressions\n                })\n            e.target.id = 'Desc'\n            this.setState({ \n                direction : 'Assc',\n            })\n        }\n        else if(e.target.id === 'Desc'){\n            rows = data.sort((a,b)=>{\n                return b.impressions-a.impressions\n            })\n            e.target.id = 'Assc'\n            this.setState({ direction : 'Desc' })\n            }\n        else{\n            return null\n        }\n    }\n\n    sortClickHandler = (e) => {\n\n        let data = this.props.data\n      \n        if(e.target.id === 'Assc'){\n            rows = data.sort((a,b)=>{\n                return a.clicks-b.clicks\n                })\n            e.target.id = 'Desc'\n            this.setState({ \n                direction : 'Assc',\n            })\n        }\n        else if(e.target.id === 'Desc'){\n            rows = data.sort((a,b)=>{\n                return b.clicks-a.clicks\n            })\n            e.target.id = 'Assc'\n            this.setState({ direction : 'Desc' })\n            }\n        else{\n            return null\n        }\n    }\n\n    postStringShortener = (string) => {\n        if(string && string.length > 50){\n            return string.slice(0,47).concat('...')\n        }\n        else if(string && string.length < 50){\n            return string\n        }\n        else \n            return 'no description'\n    }\n\n    moreInfoClickHandeler = (e) => {\n        let postId = e.target.parentNode.parentNode.id\n        let post = this.props.data.filter((post => post.id === parseInt(postId)))\n        console.log(post)\n    }\n\n    getTableRows = () => {\n        return rows.map(post =>\n            <tbody id={`${post.id}`}>\n            <td><button \n                className='ui green button'  \n                onClick={(e)=> this.props.compareDataHandeler(e.target.parentNode.parentNode.id)}>Add to compare</button></td>\n        <td><button\n                onClick={this.moreInfoClickHandeler}\n                className='ui blue button'\n                >More Info\n            </button></td>\n                <td>{post.id}</td>\n                <td style={{textAlign : 'left'}}><a href={post.url} target=\"_blank\">{post.url}</a></td>\n                <td style={{textAlign : 'left'}}>{this.postStringShortener(post.text)}</td>\n                <td style={{textAlign : 'left'}}>{post.clicks}</td>\n                <td style={{textAlign : 'left'}}>{post.impressions}</td>\n                <td style={{textAlign : 'left'}}>{`${post.spend.amount ? post.spend.amount : 0} ${post.spend.currency ? post.spend.currency : ''}`}</td>\n                </tbody>)\n\n        }\n\n    collectRows = () => {\n        if(rows.length <= 0){\n            this.props.data.map(post => rows.push(post))\n        } else if( rows.length !== this.props.data.length){\n            rows = []\n            this.props.data.map(post => rows.push(post))\n        }\n    }\n\n    render() {\n        this.collectRows()\n        return(\n            <div className='table'>\n            <table style={{width : '80vw'}}>\n                <tr>\n                <th>Check</th>\n                <th>Details</th>\n                <th>Post ID</th>\n                <th>URL</th>\n                <th>Text</th>\n                <th><button\n                    className='ui grey button'\n                    name='clicks'\n                    id='Assc'\n                    onClick={this.sortClickHandler}>Clicks</button></th>\n            <th>\n                <button\n                    className='ui grey button'\n                    name='impressions'\n                    id='Assc'\n                    onClick={this.sortImpressionsHandler}>\n                        Impressions\n                </button>\n            </th>\n                <th>Currency</th>\n            </tr>\n            {this.getTableRows()}\n        </table>\n        <Modal />\n</div>\n    )\n  }\n}\n\nexport default PostTable\n"]},"metadata":{},"sourceType":"module"}