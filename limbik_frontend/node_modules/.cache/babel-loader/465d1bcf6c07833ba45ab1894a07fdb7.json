{"ast":null,"code":"var _jsxFileName = \"/home/michael/Development/limbik/limbik_frontend/src/components/search/newFilter.js\";\nimport React, { Component } from 'react';\nimport { Select } from 'semantic-ui-react';\n\nclass NewFilter extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.collectFilterKeys = () => {\n      let keyArr = [];\n      this.props.data.forEach(attr => {\n        Object.keys(attr.targeting).forEach(target => {\n          if (!keyArr.includes(target)) {\n            keyArr.push(target);\n          }\n        });\n      });\n      return keyArr;\n    };\n\n    this.assignKeysToSelect = () => {\n      let keys = this.collectFilterKeys();\n      let index = 1;\n      const options = [];\n      keys.forEach(item => {\n        options.push({\n          key: \"\".concat(item, \"-\").concat(index),\n          text: item.replace(/_/g, ' '),\n          value: item\n        });\n        index += 1;\n      });\n      return options;\n    };\n  }\n\n  render() {\n    this.assignKeysToSelect();\n    return React.createElement(Select, {\n      options: '',\n      defaultValue: \"articles\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    });\n  }\n\n}\n\nexport default NewFilter;","map":{"version":3,"sources":["/home/michael/Development/limbik/limbik_frontend/src/components/search/newFilter.js"],"names":["React","Component","Select","NewFilter","collectFilterKeys","keyArr","props","data","forEach","attr","Object","keys","targeting","target","includes","push","assignKeysToSelect","index","options","item","key","text","replace","value","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,MAAT,QAAuB,mBAAvB;;AAGA,MAAMC,SAAN,SAAwBF,SAAxB,CAAiC;AAAA;AAAA;;AAAA,SAG7BG,iBAH6B,GAGT,MAAM;AACtB,UAAIC,MAAM,GAAG,EAAb;AACA,WAAKC,KAAL,CAAWC,IAAX,CAAgBC,OAAhB,CAAyBC,IAAD,IAAQ;AAC5BC,QAAAA,MAAM,CAACC,IAAP,CAAYF,IAAI,CAACG,SAAjB,EAA4BJ,OAA5B,CAAqCK,MAAD,IAAU;AAC1C,cAAG,CAACR,MAAM,CAACS,QAAP,CAAgBD,MAAhB,CAAJ,EAA4B;AACxBR,YAAAA,MAAM,CAACU,IAAP,CAAYF,MAAZ;AACH;AACJ,SAJD;AAKH,OAND;AAOA,aAAOR,MAAP;AACH,KAb4B;;AAAA,SAe7BW,kBAf6B,GAeR,MAAM;AACvB,UAAIL,IAAI,GAAG,KAAKP,iBAAL,EAAX;AACA,UAAIa,KAAK,GAAG,CAAZ;AACA,YAAMC,OAAO,GAAG,EAAhB;AAEAP,MAAAA,IAAI,CAACH,OAAL,CAAcW,IAAD,IAAQ;AACjBD,QAAAA,OAAO,CAACH,IAAR,CAAa;AAAEK,UAAAA,GAAG,YAAMD,IAAN,cAAcF,KAAd,CAAL;AAA4BI,UAAAA,IAAI,EAAGF,IAAI,CAACG,OAAL,CAAa,IAAb,EAAmB,GAAnB,CAAnC;AAA4DC,UAAAA,KAAK,EAAGJ;AAApE,SAAb;AACAF,QAAAA,KAAK,IAAI,CAAT;AACH,OAHD;AAIJ,aAAOC,OAAP;AACC,KAzB4B;AAAA;;AA4B7BM,EAAAA,MAAM,GAAE;AACJ,SAAKR,kBAAL;AACA,WACQ,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAE,EAAjB;AAAqB,MAAA,YAAY,EAAC,UAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADR;AAGH;;AAjC4B;;AAoC/B,eAAeb,SAAf","sourcesContent":["import React, { Component } from 'react'\nimport { Select } from 'semantic-ui-react'\n\n\nclass NewFilter extends Component{\n\n\n    collectFilterKeys = () => {\n        let keyArr = []\n        this.props.data.forEach((attr)=>{\n            Object.keys(attr.targeting).forEach((target)=>{\n                if(!keyArr.includes(target)){\n                    keyArr.push(target)\n                }\n            })\n        })\n        return keyArr\n    }\n\n    assignKeysToSelect = () => {\n        let keys = this.collectFilterKeys()\n        let index = 1\n        const options = []\n\n        keys.forEach((item)=>{\n            options.push({ key : `${item}-${index}`, text : item.replace(/_/g, ' '), value : item  })\n            index += 1\n        })\n    return options\n    }\n\n\n    render(){\n        this.assignKeysToSelect()\n        return(\n                <Select options={''} defaultValue='articles' />\n        )\n    }\n }\n\n  export default NewFilter\n\n\n\n"]},"metadata":{},"sourceType":"module"}