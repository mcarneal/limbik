{"ast":null,"code":"var _jsxFileName = \"/home/michael/Development/limbik/limbik_frontend/src/components/search/newFilter.js\";\nimport React, { Component } from 'react';\nimport { Select } from 'semantic-ui-react';\n\nclass NewFilter extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      firstFilter: null\n    };\n\n    this.collectFilterKeys = () => {\n      let keyArr = [];\n      this.props.data.forEach(attr => {\n        Object.keys(attr.targeting).forEach(target => {\n          if (!keyArr.includes(target)) {\n            keyArr.push(target);\n          }\n        });\n      });\n      return keyArr;\n    };\n\n    this.assignKeysToSelect = () => {\n      let keys = this.collectFilterKeys();\n      let index = 1;\n      const options = [];\n      keys.forEach(item => {\n        options.push({\n          key: \"\".concat(item, \"-\").concat(index),\n          text: item.replace(/_/g, ' '),\n          value: item\n        });\n        index += 1;\n      });\n      return options;\n    };\n\n    this.firstFilterChangeHandeler = e => {\n      let firstFilter = e.target.innerText.replace(/ /g, '_');\n      this.setState({\n        firstFilter\n      });\n    };\n\n    this.collectSubCategory = () => {\n      let postObj = {};\n      let filterArray;\n      this.props.data.map(post => {\n        filterArray = this.props.data.filter(post => post.targeting[\"\".concat(this.state.firstFilter)]);\n      });\n      return filterArray;\n    };\n\n    this.cleanSubCategory = () => {\n      let subArray = this.collectSubCategory();\n      let cleanArray = [];\n\n      if (this.state.firstFilter) {\n        subArray.forEach(post => {\n          Object.values(post.targeting).forEach(target => {\n            console.log(target);\n          });\n        });\n      }\n    };\n  }\n\n  render() {\n    this.cleanSubCategory();\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(Select, {\n      options: this.assignKeysToSelect(),\n      defaultValue: \"articles\",\n      onChange: this.firstFilterChangeHandeler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }), this.state.firstFilter ? React.createElement(Select, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }) : null);\n  }\n\n}\n\nexport default NewFilter;","map":{"version":3,"sources":["/home/michael/Development/limbik/limbik_frontend/src/components/search/newFilter.js"],"names":["React","Component","Select","NewFilter","state","firstFilter","collectFilterKeys","keyArr","props","data","forEach","attr","Object","keys","targeting","target","includes","push","assignKeysToSelect","index","options","item","key","text","replace","value","firstFilterChangeHandeler","e","innerText","setState","collectSubCategory","postObj","filterArray","map","post","filter","cleanSubCategory","subArray","cleanArray","values","console","log","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { Select } from 'semantic-ui-react'\n\n\nclass NewFilter extends Component{\n\n    state = {\n        firstFilter : null\n    }\n\n\n    collectFilterKeys = () => {\n        let keyArr = []\n        this.props.data.forEach((attr)=>{\n            Object.keys(attr.targeting).forEach((target)=>{\n                if(!keyArr.includes(target)){\n                    keyArr.push(target)\n                }\n            })\n        })\n        return keyArr\n    }\n\n    assignKeysToSelect = () => {\n        let keys = this.collectFilterKeys()\n        let index = 1\n        const options = []\n\n        keys.forEach((item)=>{\n            options.push({ key : `${item}-${index}`, text : item.replace(/_/g, ' '), value : item  })\n            index += 1\n        })\n    return options\n    }\n\n    firstFilterChangeHandeler = (e) => {\n        let firstFilter = e.target.innerText.replace(/ /g, '_')\n        this.setState({firstFilter})\n\n    }\n\n    collectSubCategory = () => {\n        let postObj = {}\n        let filterArray\n        this.props.data.map((post) => {\n           filterArray = this.props.data.filter(post => post.targeting[`${this.state.firstFilter}`])\n        })\n        return filterArray\n    }\n\n    cleanSubCategory = () => {\n        let subArray = this.collectSubCategory()\n        let cleanArray = []\n        if(this.state.firstFilter){\n            subArray.forEach((post)=>{\n                Object.values(post.targeting).forEach((target)=>{\n                    console.log(target)\n                })\n            })\n\n        }\n        \n    }\n\n\n    render(){\n        this.cleanSubCategory()\n        return(\n            <div>\n                <Select options={this.assignKeysToSelect()} defaultValue='articles' onChange={this.firstFilterChangeHandeler} />\n                { this.state.firstFilter ? <Select /> : null  } \n            </div>\n        )\n    }\n }\n\n  export default NewFilter\n\n\n\n"]},"metadata":{},"sourceType":"module"}