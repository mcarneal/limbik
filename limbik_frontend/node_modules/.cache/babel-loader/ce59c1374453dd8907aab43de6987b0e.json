{"ast":null,"code":"var _jsxFileName = \"/home/michael/Development/limbik/limbik_frontend/src/components/table/index.js\";\nimport React, { Component } from 'react';\nlet rows = [];\n\nclass PostTable extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      direction: 'Assc',\n      data: []\n    };\n\n    this.sortHandler = () => {\n      let data = this.props.data.sort((a, b) => {\n        return a.clicks - b.clicks;\n      });\n    };\n\n    this.postStringShortener = string => {\n      if (string && string.length > 50) {\n        return string.slice(0, 50).concat('...');\n      } else if (string && string.length < 50) {\n        return string;\n      } else return 'no description';\n    };\n\n    this.getTableRows = () => {\n      if (this.state.data.length > 0) {\n        return rows.map(post => React.createElement(\"tr\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 34\n          },\n          __self: this\n        }, React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 35\n          },\n          __self: this\n        }, post.id), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 36\n          },\n          __self: this\n        }, this.postStringShortener(post.text)), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 37\n          },\n          __self: this\n        }, post.clicks), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 38\n          },\n          __self: this\n        }, post.impressions), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 39\n          },\n          __self: this\n        }, \"\".concat(post.spend.amount ? post.spend.amount : 0, \" \").concat(post.spend.currency ? post.spend.currency : ''))));\n      }\n    };\n\n    this.collectRows = () => {\n      this.props.data.map(post => rows.push(post));\n    };\n  }\n\n  render() {\n    this.collectRows();\n    console.log(rows);\n    return React.createElement(\"div\", {\n      className: \"table\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(\"table\", {\n      style: {\n        width: '95vw'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, \"Post ID\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, \"Text\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: this.sortHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, \"Clicks\")), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, \"Impressions\")), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, \"Currency\")), this.getTableRows()));\n  }\n\n}\n\nexport default PostTable;","map":{"version":3,"sources":["/home/michael/Development/limbik/limbik_frontend/src/components/table/index.js"],"names":["React","Component","rows","PostTable","state","direction","data","sortHandler","props","sort","a","b","clicks","postStringShortener","string","length","slice","concat","getTableRows","map","post","id","text","impressions","spend","amount","currency","collectRows","push","render","console","log","width"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,IAAIC,IAAI,GAAG,EAAX;;AAEA,MAAMC,SAAN,SAAwBF,SAAxB,CAAkC;AAAA;AAAA;AAAA,SAG9BG,KAH8B,GAGtB;AACJC,MAAAA,SAAS,EAAG,MADR;AAEJC,MAAAA,IAAI,EAAG;AAFH,KAHsB;;AAAA,SAS9BC,WAT8B,GAShB,MAAM;AAChB,UAAID,IAAI,GAAG,KAAKE,KAAL,CAAWF,IAAX,CAAgBG,IAAhB,CAAqB,CAACC,CAAD,EAAGC,CAAH,KAAO;AACnC,eAAOD,CAAC,CAACE,MAAF,GAASD,CAAC,CAACC,MAAlB;AACH,OAFU,CAAX;AAGH,KAb6B;;AAAA,SAgB9BC,mBAhB8B,GAgBPC,MAAD,IAAY;AAC9B,UAAGA,MAAM,IAAIA,MAAM,CAACC,MAAP,GAAgB,EAA7B,EAAgC;AAC5B,eAAOD,MAAM,CAACE,KAAP,CAAa,CAAb,EAAe,EAAf,EAAmBC,MAAnB,CAA0B,KAA1B,CAAP;AACH,OAFD,MAGK,IAAGH,MAAM,IAAIA,MAAM,CAACC,MAAP,GAAgB,EAA7B,EAAgC;AACjC,eAAOD,MAAP;AACH,OAFI,MAID,OAAO,gBAAP;AACP,KAzB6B;;AAAA,SA2B9BI,YA3B8B,GA2Bf,MAAM;AACjB,UAAG,KAAKd,KAAL,CAAWE,IAAX,CAAgBS,MAAhB,GAAyB,CAA5B,EAA8B;AAC1B,eAAOb,IAAI,CAACiB,GAAL,CAASC,IAAI,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAKA,IAAI,CAACC,EAAV,CADoB,EAEpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAK,KAAKR,mBAAL,CAAyBO,IAAI,CAACE,IAA9B,CAAL,CAFoB,EAGpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAKF,IAAI,CAACR,MAAV,CAHoB,EAIpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAKQ,IAAI,CAACG,WAAV,CAJoB,EAKpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAQH,IAAI,CAACI,KAAL,CAAWC,MAAX,GAAoBL,IAAI,CAACI,KAAL,CAAWC,MAA/B,GAAwC,CAAhD,cAAqDL,IAAI,CAACI,KAAL,CAAWE,QAAX,GAAsBN,IAAI,CAACI,KAAL,CAAWE,QAAjC,GAA4C,EAAjG,EALoB,CAAjB,CAAP;AAQH;AACJ,KAtC6B;;AAAA,SAwC9BC,WAxC8B,GAwChB,MAAM;AAChB,WAAKnB,KAAL,CAAWF,IAAX,CAAgBa,GAAhB,CAAoBC,IAAI,IAAIlB,IAAI,CAAC0B,IAAL,CAAUR,IAAV,CAA5B;AACH,KA1C6B;AAAA;;AA4C9BS,EAAAA,MAAM,GAAG;AACL,SAAKF,WAAL;AACAG,IAAAA,OAAO,CAACC,GAAR,CAAY7B,IAAZ;AACA,WACI;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA;AAAO,MAAA,KAAK,EAAE;AAAC8B,QAAAA,KAAK,EAAG;AAAT,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADA,EAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFA,EAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAI;AAAQ,MAAA,OAAO,EAAE,KAAKzB,WAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAJ,CAHA,EAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAJ,CAJA,EAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBALA,CADJ,EAQC,KAAKW,YAAL,EARD,CADA,CADJ;AAcL;;AA7D+B;;AAgElC,eAAef,SAAf","sourcesContent":["import React, { Component } from 'react'\n\nlet rows = []\n\nclass PostTable extends Component {\n\n\n    state = {\n        direction : 'Assc',\n        data : []\n    }\n\n\n    sortHandler = () => {\n        let data = this.props.data.sort((a,b)=>{\n            return a.clicks-b.clicks\n        })\n    }\n\n\n    postStringShortener = (string) => {\n        if(string && string.length > 50){\n            return string.slice(0,50).concat('...')\n        }\n        else if(string && string.length < 50){\n            return string\n        }\n        else \n            return 'no description'\n    }\n\n    getTableRows = () => {\n        if(this.state.data.length > 0){\n            return rows.map(post => <tr>\n                <td>{post.id}</td>\n                <td>{this.postStringShortener(post.text)}</td>\n                <td>{post.clicks}</td>\n                <td>{post.impressions}</td>\n                <td>{`${post.spend.amount ? post.spend.amount : 0} ${post.spend.currency ? post.spend.currency : ''}`}</td>\n                </tr>)\n\n        }\n    }\n\n    collectRows = () => {\n        this.props.data.map(post => rows.push(post))\n    }\n\n    render() {\n        this.collectRows()\n        console.log(rows)\n        return(\n            <div className='table'>\n            <table style={{width : '95vw'}}>\n                <tr>\n                <th>Post ID</th>\n                <th>Text</th>\n                <th><button onClick={this.sortHandler}>Clicks</button></th>\n                <th><button>Impressions</button></th>\n                <th>Currency</th>\n            </tr>\n            {this.getTableRows()}\n        </table>\n</div>\n    )\n  }\n}\n\nexport default PostTable\n"]},"metadata":{},"sourceType":"module"}